["note that the script name must end with code_removed, otherwise it will be interpreted as the db address.", "this is dangerous. you are not escaping username, so any arbitrary regex can be injected.", "@tobia my first use was $exists only but it actually use whole table scan so very slow. db.test.find({\"name\":\"abc\",\"d.5\":{$exists:true},\"d.6\":{$exis\u200c\u200bts:true}}) \"nreturned\": 46525, \"executiontimemillis\": 167289, \"totalkeysexamined\": 10990840, \"totaldocsexamined\": 10990840, \"inputstage\": { \"stage\": \"ixscan\", \"keypattern\": { \"name\": 1, \"d\": 1 }, \"indexname\": \"name_1_d_1\", \"direction\": \"forward\", \"indexbounds\": { \"name\": [ \"[ \"abc \", \"abc \"]\" ], \"d\": [ \"[minkey, maxkey]\" ] } } if you see it scanned whole table.", "code_removed", "thanks for the links. the second link makes me a bit worried that i can't append new columns to the tables in hdfstore? is that correct? also, i added an example of how i would use this setup.", "couchapps are \"no longer recommended\" since ~2012: docs.couchdb.com/en/latest/ddocs", "sorry bad example:(. really its geospatial data. so i will have an x,y for each document. users can easily just add/drop a pin on map for their current location and attach some metadata about that location. i.e. pics/video, title, weather, etc. so imagine a bunch of people at the olympics adding new data. people/locations same difference. question is since each 'event' might have millions of docs should each separate event live in its own collection, or throw all events docs into the same collection? one collection with 10 million docs, or 10 collections that each have ~1 million docs.", "yes, this answer works! combining this with the answer from @gilo, the following command works for me: \"mongo mydb -u admin -p secretpassword --authenticationdatabase admin\"", "you can use the new feature of 2.6 mongodb: code_removed", "hi @ajoy, could it be that in your case it's related to the replset issue? please see update 3. thanks for the feedback!", "i think the best way do this as mentioned here is in mongod 3.4.4+ but without using the code_removed operator and using only two stages in the pipeline. instead we can use the code_removed and code_removed operators. in the code_removed stage, we use the code_removed operator to return a single document where key/value are from all documents in the collection. then comes the code_removed where we use code_removed and code_removed to return the keys. code_removed now if we have a nested documents and want to get the keys as well, this is doable. for simplicity, let consider a document with simple embedded document that look like this: code_removed the following pipeline yield all keys (field1, field2, field3, field4). code_removed with a little effort, we can get the key for all subdocument in an array field where the elements are object as well.", "@java-addict301 while that approach does provide a more streamlined api it does have two drawbacks. the first being that there is no defined way to check for connection errors. you would have to handle that inline everywhere when ever you call get. i like to fail early with database connections and generally i won't let the app boot with out a connection to the database. the other issue is throughput. because you don't have an active connection you might have to wait for a bit longer on the first get() call which you won't have control over. could skew your reporting metrics.", "the most general solution is this: make use of the aggregation (answer given by @melan): code_removed this works even when there are documents in \"subset\" before the operation and you want to preserve those \"old\" documents and just insert a new subset into it. care must be taken, because the code_removed command replaces the documents with the same code_removed.", "oh, thanks! sample code is just added.", "option1: start the console and execute this: code_removed option2: open a shell console and do: $ mongod --version it will show you something like $ mongod --version db version v3.0.2", "i'm a bit late to the party, but it'd be really nice if whatever you had posted on pastebin you instead posted on stackoverflow as your link unfortunately is dead. thankfully though the answers are still informative.", "@alexandermills can you elaborate please?", "i'm not sure the 'best' way, either. we've always just tracked everything done to the db, and then either allow or undo it at the application level, in code. we've never relied upon transactions, anywhere, ever. mongo docs suggest using metadata to track what parts of the rollbackable transaction have occurred, what state the transaction is in, in case it breaks and needs to be rolled back. funny thing is, we'd already been doing that all along with mysql and others. it's not that much more work and it keeps the focus on what's going on, when, where and why, instead of black boxing it.", "adding host doesn't work, however, code_removed does fix it temporarily.", "awesome, this worked for me. glad i scrolled down to find the highest-voted answer. smh stackoverflow, you gotta get these higher voted answers up there when there's no accepted solution to the question. curious to know what could be the cause of this mongodb problem", "cheap benchmarks are always better than no benchmarks. thanks for the question mate.", "turns out there's a problem with backticks. try running code_removed instead of the original command.", "this syntax is useful if the value is stored in a variable, so the query could be write as (in ruby): code_removed", "code_removed this is not off-topic. in fact, i reached this question due to the title. so people like me benefit reading such an answer. also, i am giving a very useful method in the example rather than a toy example.", "i am using nodejs with mongodbnative. fixed the \"not defined error\" by including var objectid = require('mongodb').objectid;", "if you don't have to use the views directory, simply move html files to the public directory below. and then, add this line into app.configure instead of '/views'. server.use(express.static(__dirname + '/public'));", "after some more looking, especially in the mongodb documents, and puzzling bits together, this was the answer: code_removed", "i am using windows version 3.0.3 and specifying the database name did it for me!thank you @clevertension.", "when i was faced with a similar solution, i backtracked and found that the business request was actually for creating some form of rotation of the inventory being presented. in that case, there are much better options, which have answers from search engines like solr, not data stores like mongodb. in short, with the requirement to \"intelligently rotate\" content, what we should do instead of a random number across all of the documents is to include a personal q score modifier. to implement this yourself, assuming a small population of users, you can store a document per user that has the productid, impression count, click-through count, last seen date, and whatever other factors the business finds as being meaningful to compute a q score modifier. when retrieving the set to display, typically you request more documents from the data store than requested by the end user, then apply the q score modifier, take the number of records requested by the end user, then randomize the page of results, a tiny set, so simply sort the documents in the application layer (in memory). if the universe of users is too large, you can categorize users into behavior groups and index by behavior group rather than user. if the universe of products is small enough, you can create an index per user. i have found this technique to be much more efficient, but more importantly more effective in creating a relevant, worthwhile experience of using the software solution.", "@sandeepgiri how can i do the aggregate pipeline since i have really really intensive data in separated collection need join??", "@timgautier thanks, i was afraid so, it took hours to insert all those values, and i should have thought of that before:) i think i'll spend the time now to insert it to mysql for those statistics...", "binary fields include 4 byte length and 1 byte subtype, so empty binary field occupies 5 bytes.", "@joeframbach requesting based on createdon seems problematic. skip was embedded for a reason. the docs are only warning of the performance hit of cycling through the btree index, which is the case with all dbmss. for the users question \"something comparable mysql to limit 50,100\".skip is exactly right.", "@vivek the first 4 bytes of objectid represent the number of seconds since the unix epoch (1970/1/1 00:00:00 utc), and as such you can use it with greater than ($gt) and less than ($lt) to find objects that were created within a certain window.", "+1 for rockmongo. good stuff.", "make an update object with the property names including the necessary dot path. (\"somekey.\"+ from op's example), and then use that do the update. code_removed", "if you were running in a vm, that command would just stop the vm.", "to what extent are 'lost data' criticisms still valid of mongodb? i'm referring to the following: 1. mongodb issues writes in unsafe ways by default in order to win benchmarks if you don't issue getlasterror(), mongodb doesn't wait for any confirmation from the database that the command was processed. this introduces at least two classes of problems: in a concurrent environment (connection pools, etc), you may have a subsequent read fail after a write has \"finished\"; there is no barrier condition to know at what point the database will recognize a write commitment any unknown number of save operations can be dropped on the floor due to queueing in various places, things outstanding in the tcp buffer, etc, when your connection drops of the db were to be kill'd or segfault, hardware crash, you name it 2. mongodb can lose data in many startling ways here is a list of ways we personally experienced records go missing: they just disappeared sometimes. cause unknown. recovery on corrupt database was not successful, pre transaction log. replication between master and slave had gaps in the oplogs, causing slaves to be missing records the master had. yes, there is no checksum, and yes, the replication status had the slaves current replication just stops sometimes, without error. monitor your replication status! ...[other criticisms] if still valid, these criticisms would be worrying to some extent. the article primarily references v1.6 and v1.8, but since then v2 has been released. are the shortcomings discussed in the article still outstanding as of the current release?", "you can use the command below for running mongodb as a windows service code_removed if you use mongodb with default parameters, you can use these values: youripadress: 127.0.0.1 or localhost yourportnumber: 27017 (default port) or dont put --port servicedisplayname: only if you run more than one service (since mongodb 1.8) there's more information on this command here", "this gist can be time saving for devleopment machine setups gist.github.com/serdarb/5102848", "demo change type of field mid from string to mongo objectid using mongoose code_removed mongo objectid is just another example of such styles as number, string, boolean that hope the answer will help someone else.", "please check @kasur's answer and edit your question with a warning", "this link may help you codefari.com/2015/11/\u2026", "this is only for a single server. even say creating 4 shards would still be holding billions of records per shard...", "is it possible to do this in an aggregate search where you find the last n values of multiple documents in that are aggregated?", "code_removed details information of every collection code_removed for users with the required access (privileges that grant listcollections action on the database), the method lists the names of all collections for the database. for users without the required access, the method lists only the collections for which the users has privileges. for example, if a user has find on a specific collection in a database, the method would return just that collection.", "@mikemaccana only because it should be code_removed -- the kernel will execute the equivalent of code_removed which will eventually lead to a call to code_removed for some code_removed on the path, which means the filename will be treated as the database name, not the script to execute, unless it ends in code_removed, per the docs (and the docs are accurate on this point, at least for 3.x)", "@jeff, with pandas being at 0.17.x now have the issues outlined above been resolved in pandas?", "the documentation for 'compact' says: \"this operation will not reduce the amount of disk space used on the filesystem.\" i don't understand how this is a solution to the original question.", "fixed! the reason was the code_removed variable in code_removed. previously, i was using mongodb 1.8, where the default value for dbpath was code_removed. the upstart job code_removed(which comes with mongodb-10gen package) invokes the code_removed with code_removed option. as a solution, i only had to change the owner of the code_removed directory recursively.", "i know this is quite old but if you are looking for the answer to the op's question on how to return only specified comment, you can use the $ (query) operator like this: code_removed", "that's quite nice:) and no php!", "there is a question already in stackoverflow, very similar with my question. the thing is that the answer for that questions was for a java driver, i am trying to do it in the shell. i am doing this... code_removed this is not working!", "thanks. but, i have used \"views\" in my coding to get the count of the corresponding group count(i.e, group 1 => 2 records, group 3 => 5 records & so on). i want to get the records count(i.e, total: 120 records). hope you understood..", "work on ubuntu. --journal fixed my problem. what does really it does? what is --journal for?", "here's the official page of admin uis. i have not really used any of them. but it looks like there is quite a bit of coverage there.", "unbelievable how this answer has 63 upvotes, when in fact what @rdsoze said is true - the query will also return records that don't have the code_removed field.", "i want to check if an email address exists in a collection and insert if it doesnt. i got this bulk.find({email:\"xyc@yahoo.com\"}).upsert().update({$setonin\u200c\u200bsert:{status:\"i\",poi\u200c\u200bnts:\"0\"} }) if that is correct can we make bulk query operations dynamically?", "here how to do this on mongodb 3.0. i used this nice blog install mongodb. create data directories: code_removed start mongod instances code_removed configure the replica set: code_removed installing elasticsearch: code_removed installing and configuring the mongodb river: $ bin/plugin --install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb $ bin/plugin --install elasticsearch/elasticsearch-mapper-attachments create the \u201criver\u201d and the index: curl -xput ' -d '{ \"type\": \"mongodb\", \"mongodb\": { \"db\": \"mydb\", \"collection\": \"foo\" }, \"index\": { \"name\": \"name\", \"type\": \"random\" } }' test on browser:", "i've read that page before. ironically enough i actually linked to the same page in a previous answer. and i did see the \"reasonably high probability of being unique\" disclaimer but was unsure if the collection being inserted into played any factor in this. i guess what i'm unsure of is what exactly the 2 byte process id portion of the objectid really represents. if it has something to do with the collection then there would be uniqueness between two different documents created at the exact same time on the exact same machine in different collections.", "yeah, the best way is to convert the object notation to a flat key-value string representation, as mentioned in this comment: i wanted to highlight an alternative method using this npm library: which lets you manipulate different objects using dot notation. i used this pattern to programatically create a nested object property when accepting the key-value as a function variable, as follows: code_removed this pattern lets me use nested as well as single-level properties interchangeably, and insert them cleanly into mongo. if you need to play around with js objects beyond just mongo, especially on the client-side but have consistency when working with mongo, this library gives you more options than the earlier mentioned code_removed npm module. p.s i originally wanted to just mention this as a comment but apparently my s/o rep isn't high enough to post a comment. so, not trying to muscle in on szybkisasza's comment, just wanted to highlight providing an alternative module.", "you can log all queries: code_removed source: code_removed means \"log all operations\".", "not recommended for perfomances... if you have large db.", "if it's two calls to mongo, it's not really upsert is it?", "simple python/pymongo solution: stackoverflow.com/a/40048951/304209", "so how would a query look like that asks for an object of a given old version? isn't the ability to retrieve old versions the purpose of keeping history?", "this worked for me, just try this: code_removed", "see here: php.net/manual/en/mongocollection.insert.php: \"note: if the parameter does not have an _id key or property, a new mongoid instance will be created and assigned to it. this special behavior does not mean that the parameter is passed by reference.\", it's a feature, not a bug, it's meant to be that way", "there is an working java example which can be found here. code_removed the key is query options given here. also you can change find query, if you don't need to load all the data every time. code_removed", "i assume you need to do this frequently or performance wouldn't matter that much. in that case i'd store the distinct values in a separate collection that's updated when you insert a new document instead of trying to do a distinct on a collection that large. either that or i'd re-evaluate my use of mongodb and possibly move to something else. as you found, mongodb currently isn't good at what you're trying to do.", "hi there @hendyirawan, i would suggest that you decide on what exactly you want each of your users to be able to do and give them the role that enables them to do only that. for example if you only want a user to read (which is what the question tries to do with code_removed) you should give it that ability and nothing else code_removed. notice that the role here is read, this is database specific and you cannot do anything but that. check out this link for other roles docs.mongodb.com/manual/reference/built-in-roles", "if i want specific key name from array,how can i get?", "database files cannot be reduced in size. while \"repairing\" database, it is only possible for mongo server to delete some of its files. if large amount of data has been deleted, mongo server will \"release\" (delete), during repair, some of its existing files.", "i just keep getting code_removed when trying to run mongodump. any ideas?", "add the following lines to your code replace \"jade\" with \"ejs\" & \"x.y.z\"(version) with \"*\" in package.json file code_removed then in your app.js file add following code: code_removed code_removed and remember keep all.html files in views folder cheers:)", "as mongo shell support regex, that's completely possible. code_removed if we want the query to be case-insensitive, we can use \"i\" option, like shown below: code_removed", "this is probably the best blog i found regarding implementing transaction like feature for mongodb.! syncing flag: best for just copying data over from a master document job queue: very general purpose, solves 95% of cases. most systems need to have at least one job queue around anyway! two phase commit: this technique ensure that each entity always has all information needed to get to a consistent state log reconciliation: the most robust technique, ideal for financial systems versioning: provides isolation and supports complex structures read this for more info:", "in express 4, you could also use: app.set('view engine', 'jade');", "i installed mongodb with ebs on an ec2 with ubuntu 14.04 following this tutorial: but instead of the suggested chown i did: code_removed to fix the problem", "i've basically resorted to the same mechanism as @dcrosta: manually re-ordering the result using the original \"in list\" ordering as reference. i remember this being a problem with sql databases as well, so not a mongo peculiarity.", "there is no way to do this in single query. you have to search the document in first query: if document exists: code_removed else code_removed no need to add condition code_removed. also in multithreaded enviourment you have to be careful that only one thread can execute the second (insert case, if document did not found) at a time, otherwise duplicate embed documents will be inserted.", "thanks @mech for suggestion", "for pymongo with mongodb v 3.2, cursor changes to \" cursor = coll.find (cursor_type=cursor.cursortype.tailable_await) \"", "code_removed", "you could also read the html file and send it. code_removed", "your query statement assume one knows the objectid value to begin with which is not always the case.", "ulimit -n 2048 && mongod works for me on osx. thanks to c.f.", "@maerics personally i found zheng's inclusion of the mysql very useful as it provided a point of refence.", "is there a way to know if the document has been updated or inserted?", "write the command as below and i think it will solve the problem: code_removed", "you can have ac(i)d at least - atomicity because single master writer, consistency because you have per-document consistency, durability because you can specify how many writes are needed before acking write, e.g. how many other nodes need get the data before acking it.", "same issue on my mac (using brew) solved using: code_removed", "is it possible to modify the mongodb oplog and replay it? a bug caused an update to be applied to more documents than it was supposed to be, overwriting some data. data was recovered from backup and reintegrated, so nothing was actually lost, but i was wondering if there was a way to modify the oplog to remove or modify the offending update and replay it. i don't have in depth knowledge of mongodb internals, so informative answers along the lines of, \"you don't understand how it works, it's like this\" will also be considered for acceptance.", "short answer: the query code_removed check for not-null docs.mongodb.org/manual/reference/operator/query/ne", "this is a great question, something i have pondered over quite a bit. i will summarize my lessons learned: you can easily use lucene/solr in lieu of mongodb for pretty much all situations, but not vice versa. grant ingersoll's post sums it up here. mongodb etc. seem to serve a purpose where there is no requirement of searching and/or faceting. it appears to be a simpler and arguably easier transition for programmers detoxing from the rdbms world. unless one's used to it lucene & solr have a steeper learning curve. there aren't many examples of using lucene/solr as a datastore, but guardian has made some headway and summarize this in an excellent slide-deck, but they too are non-committal on totally jumping on solr bandwagon and \"investigating\" combining solr with couchdb. finally, i will offer our experience, unfortunately cannot reveal much about the business-case. we work on the scale of several tb of data, a near real-time application. after investigating various combinations, decided to stick with solr. no regrets thus far (6-months & counting) and see no reason to switch to some other. summary: if you do not have a search requirement, mongo offers a simple & powerful approach. however if search is key to your offering, you are likely better off sticking to one tech (solr/lucene) and optimizing the heck out of it - fewer moving parts. my 2 cents, hope that helped.", "fixed! the reason was the code_removed variable in code_removed. previously, i was using mongodb 1.8, where the default value for dbpath was code_removed. the upstart job code_removed(which comes with mongodb-10gen package) invokes the code_removed with code_removed option. as a solution, i only had to change the owner of the code_removed directory recursively.", "@bugai13... sure for so, but 98% of sites aren't anywhere close to that:) that's all i'm saying. for most sites it will work great (and possibly actually help more than it could hurt.) that said, depending on your scale storing comments in a separate collection might be the only option.", "actually this working is good. but i have an application running with mongoid 2.4.0-stable which has fields such as field: customer_count, type: integer & a validation as validates_numericality_of:customer_count which was working fine. now when i am upgrading to mongoid to 3.0.16, when i assign a string value it automatically converts it to 0. without an error. i want to throw an error on wrong data assignment, this behavior turning out strange for me.", "perhaps a quick example of how to change a current user will be helpful to somebody. this is what i was actually looking for. following advice of @johnpetrone i added readwrite role to my admin user with grantrolestouser code_removed", "@usmaniqbal normally you'll just have to request for the next page, when the result is empty, then that's the end. unless you explicitly tell current query that there are sill items on the next page. you can use metadata on the result such as code_removed", "how will that be stored in the db? as a mongo datetime object?", "this is the only answer that i've seen that actually worked.", "appears that this code_removed bug is fixed on my code_removed", "add code_removed", "very elegant solution you can achieve by using chain of promises: code_removed", "firebase is a real-time engine with backward connectivity. i.e. you might build a cross-platform app where clients subscribe to events on specific data and server actively informs clients about changes the data layer is hosted for you. mind that it is highly scalable. it's a nice kickstarter solution. including auth management geo-fire. real-time geo coordinates solution. evident drawbacks of firebase are: you have to pay for it as soon as you start growing you can't host datalayer (if owning data is critical or you develop an app for some separated subnet) edit: here is a nice article how to replace firebase in your app with node.js+mongodb. it shows how much work you would have to do on your own, and explains, imho, why a startup (small app) should begin with firebase (if real-time updates to clients are required) and proceed with mongodb (in any case self-written solution) if the project keeps evolving edit 2: after being acquired by google firebase now offers various perks on top of its basic features which you would struggle to build on your own: for development cloud messaging: deliver and receive messages across platforms reliably file storage: easy file storage (including ios) hosting: deliver static files from firebase's servers (included in free plan) crash reporting: not a full logging service, but crucial help for growth remote config: customize your app on the fly: suitable for a/b testing dynamic links: send users to the right place inside your app notifications: engage with users at the right moment", "@kennyworden an effective approach to find the answer -> mongoosejs.com/docs/api.html then search for what you want but prepend '#' to the in-page search with your browser such as search on '#save' and you'll see it returns a promise.", "how do you group sort to it? i want to sort count by -1", "i've been looking for a solution to this using the newest driver for c# 3.6 and here's the fix i eventually settled on. the key here is using \"$[]\" which according to mongodb is new as of version 3.6. see for more information. here's the code: code_removed for more context see my original post here: remove array element from all documents using mongodb c# driver", "@mikemaccana the output of code_removed only shows you what's running at the time you invoke code_removed, not the chain of code_removed calls that lead to that point nor the work the kernel has done to load and execute the file. if you want to know what's really going on, you should use write a wrapper around code_removed, set that as the executable in the shebang line, and then kick the whole thing off with code_removed.", "code_removed reference", "how much is code_removed? 3? 10? 100? what's code_removed? 1kb? 1mb? 3 fields? 20 fields? what is code_removed / code_removed?", "this solution worked perfectly, thank you. i think it should be marked as the answer.", "@mikos since it has been long since you last answered this question.. what are your thoughts now?", "sharding sharding is a technique of splitting up a large collection amongst multiple servers. when we shard, we deploy multiple code_removed servers. and in the front, code_removed which is a router. the application talks to this router. this router then talks to various servers, the code_removeds. the application and the code_removed are usually co-located on the same server. we can have multiple code_removed services running on the same machine. it's also recommended to keep set of multiple code_removeds (together called replica set), instead of one single code_removed on each server. a replica set keeps the data in sync across several different instances so that if one of them goes down, we won't lose any data. logically, each replica set can be seen as a shard. it's transparent to the application, the way code_removed chooses to shard is we choose a shard key. assume, for code_removed collection we have code_removed as the shard key or it could be a compound key. and the code_removed server, it's a range based system. so based on the code_removed that we send as the shard key, it'll send the request to the right code_removed instance. so, what do we need to really know as a developer? code_removed must include a shard key, so if it's a multi-parted shard key, we must include the entire shard key we've to understand what the shard key is on collection itself for an code_removed, code_removed, code_removed - if code_removed is not given a shard key - then it's going to have to broadcast the request to all the different shards that cover the collection. for an code_removed - if we don't specify the entire shard key, we have to make it a multi update so that it knows that it needs to broadcast it", "@amangupta in that case you would need to open a connection for each database.", "to greatly uniform the distribution of results, you can use code_removed and update the random field along with each query.", "have you tried the really more developed fork fotonauts? seems way more mature to me.", "i made a command line tool to activate the profiler activity and see the logs in a \"tail\"able way: \"mongotail\". but the more interesting feature (also like code_removed) is to see the changes in \"real time\" with the code_removed option, and occasionally filter the result with code_removed to find a particular operation. see documentation and installation instructions in:", "does this run pre/post-remove middleware? (some model methods bypass document middleware and i'm not sure if this is one of them, the docs are unclear)", "note- app.register has been renamed app.engine in express 3.", "what if i want to connect to mongodb on my server? -h localhost works, but -h to my server's ip do not work. why?", "i have two collections. the first collection contains students: code_removed the second collection contains courses: code_removed each course document contains code_removed array which has a list of students registered for the course. when a student views a course on a web page he needs to see if he has already registered for the course or not. in order to do that, when the code_removed collection gets queried on the student's behalf, we need to find out if code_removed array already contains the student's objectid. is there a way to specify in the projection of a find query to retrieve student code_removed from code_removed array only if it is there? i tried to see if i could $elemmatch operator but it is geared towards an array of sub-documents. i understand that i could use aggregation framework but it seems that it would be on overkill in this case. aggregation framework would probably not be as fast as a single find query. is there a way to query course collection to so that the returned document could be in a form similar to this? code_removed", "simple you can use code_removed", "@malcolmocean is correct, in that the $in operator is for the reverse, having an array as the value. the field being an array is what the question is asking about. however, if both the field and the value are arrays, then both this answer and johnnyhk's are relevant, meaning you do need $in.", "there is no code_removed operator in mongodb. you can use the answer from johnnyhk as that works. the closest analogy to contains that mongo has is code_removed, using this your query would look like: code_removed", "will this skip code_removed fields even in the subschema collection, or only in the case where the subschema is being used to embed as array of sub-document items? i ask this particularly because of my own question on so today.", "working on mongodb 3.4 [windows] create dir c:/mongodb/data create a file in c:/mongodb/mongodb.config using this configuration: code_removed to install mongodb as a service, run this command in powershell with admin power mongod --config=\"c: mongodb mongodb.config\" --install --service open services.msc and look for mongodb, then start it", "i was having problems with this even after following all instructions in the answers and the comments, so maybe someone else finds this useful: i just ran code_removed and it worked.", "thanks. working on ubuntu 14.10.", "after downloading northwind data as per @tslater, i cleaned it up a bit.. and ran the following powershell command to import into the mongo: code_removed", "while, loosely in spirit i think the comment still works, you are right, much has changed in the last half decade and my comment should be easily dismissed.", "lets get to a conclusion here. @lex if skip is exactly right, then can it be added to this answer, or are you siding with thomas's or madhusudhan answer?", "i tried this and get error: don't know what to do with file \"0/objects.bson\", skipping...", "what's the diff of serving the html page as static vs. just loading it non-static with express?", "that worked for me. thks", "@carlosbarcelona i believe the change you made isn't the correct syntax for the code_removed method. maybe you should use code_removed after all.", "how to find find the command (this date[2015-1-12] to this date[2015-1-15]): db.collection.find({_id:{$gt: objectid(math.floor((new date('2015/1/12'))/1000).tostring(16) + \"0000000000000000\"), $lt: objectid(math.floor((new date('2015/1/15'))/1000).tostring(16) + \"0000000000000000\")}}).pretty() count the command (this date[2015-1-12] to this date[2015-1-15]): db.collection.count({_id:{$gt: objectid(math.floor((new date('2015/1/12'))/1000).tostring(16) + \"0000000000000000\"), $lt: objectid(math.floor((new date('2015/1/15'))/1000).tostring(16) + \"0000000000000000\")}}) remove the command (this date[2015-1-12] to this date[2015-1-15]): db.collection.remove({_id:{$gt: objectid(math.floor((new date('2015/1/12'))/1000).tostring(16) + \"0000000000000000\"), $lt: objectid(math.floor((new date('2015/1/15'))/1000).tostring(16) + \"0000000000000000\")}})", "this is not a safe solution. if a record gets added while you are running the update, you will corrupt your data.", "@sammaye: i'm looking for downloadable easy-to-import collections that i could use to play with mongodb. but i only can give the +100 for one user, then i cited which factors can be used to rate the quality of answers.", "thats great! thanx. i've just asked a question about it, but delleted:p", "this answer is wrong because code_removed checks for the key code_removed and does not consider it's value (code_removed) and will return a document with code_removed.", "pretty cool, first time i see a function used with mongo!! the downside of course, i suppose, is that it won't use the indexes", "hi @ajoy, could it be that in your case it's related to the replset issue? please see update 3. thanks for the feedback!", "@sundarbons yes you are re-writing a field across your database, this is a big deal no matter how you do it. if you were using sql and this was a big table you would probably have to take some down time.", "i know how to list all collections in a particular database, but how do i list all available databases in mongodb shell?", "don't kill the process using the -9 signal as it would cause damage: use code_removed instead", "i also got the service message but decided to ignore it and try restarting again with \"sudo mongod\" and after it finally worked", "this one is more useful", "yep mongodb keeps the order of the array.. just like javascript engines..", "@guymograbi \u00bfdid you mean mongodb code_removed?:)", "you can start the server with the code_removed option and it will create / populate the code_removed. even without the secondary. this is definitely the only way to \"listen\" to changes in the db.", "great answer. just wondering, is calling code_removed every iteration in mongo is as slow as regular javascript, where it recalculates the length on every call?", "> db.car.distinct('name') [ \"honda\", \"tat\", \"tata\", \"tata3\" ] > db.car.find({\"name\":/. ta. /})", "not using $set might be a bad habit to get into if you're going to be using the native driver from time to time though.", "cause \"e11000 duplicate key error index\"", "if you are coming from the mysql world, mongodb is going to \"feel\" a lot more natural to you because of its query-like language support. i think that is what makes it so friendly for a lot of people. couchdb is fantastic if you want to utilize the really great master-master replication support with a multi-node setup, possibly in different data centers or something like that. mongodb's replication (replica sets) is a master-slave-slave-slave-* setup, you can only write to the master in a replica set and read from any of them. for a standard site configuration, that is fine. it maps to mysql usage really well. but if you are trying to create a global service like a cdn that needs to keep all global nodes synced even though read/write to all of them, something like the replication in couchdb is going to be a huge boon to you. while mongodb has a query-like language that you can use and feels very intuitive, couchdb takes a \"map-reduce\" approach and this concepts of views. it feels odd at first, but as you get the hang of it, it really starts feeling intuitive. here is a quick overview so it makes some sense: couchdb stores all your data in a b-tree you cannot \"query\" it dynamically with something like \"select * from user where...\" instead, you define discrete \"views\" of your data... \"here is a view of all my users\", \"here is a view of all users older than 10\" \"here is a view of all users older than 30\" and so on. these views are defined using map-reduce approach and are defined as javascript functions. when you define a view, the db starts feeding all the documents of the db you assigned the view to, through it and recording the results of your functions as the \"index\" on that data. there are some basic queries you can do on the views like asking for a specific key (id) or range of ids regardless of what your map/reduce function does. read through these slides, it's the best clarification of map/reduce in couch i've seen. so both of these sources use json documents, but couchdb follows this more \"every server is a master and can sync with the world\" approach which is fantastic if you need it, while mongodb is really the mysql of the nosql world. so if that sounds more like what you need/want, go for that. little differences like mongo's binary protocol vs the restful interface of couchdb are all minor details. if you want raw speed and to hell with data safety, you can make mongo run faster than couchdb as you can tell it to operate out of memory and not commit things to disk except for sparse intervals. you can do the same with couch, but it's communication protocol is going to be 2-4x slower than raw binary communication with mongo in this \"speed over everything!\" scenario. keep in mind that raw crazy insane speed is useless if a server crash or disk failure corrupts and toasts your db into oblivion, so that data point isn't as amazing as it might seem (unless you are doing real-time trading systems on wall street, in which case look at redis). hope that all helps!", "what if you change directory into dump/gen and run it again with code_removed", "i am trying to add authorization to my mongodb. i am doing all this on linux with mongodb 2.6.1. my mongod.conf file is in the old compatibility format (this is how it came with the installation). 1) i created admin user as described here in (3) 2) i then edited mongod.conf by uncommenting this line code_removed 3) finally i rebooted the mongod service and i tried to login with: code_removed 4) i can connect but it says this upon connect. code_removed 5) now it seems this code_removed user i created has no permissions at all. code_removed what is the problem? i repeated this whole procedure 3 times and i think i did it all as specified in the mongodb docs. but it doesn't work. i was expecting this code_removed user to be authorized to do anything so that he can then create other users and give them more specific permissions.", "this doesn't answer the question. i think the other answers are much more useful (i.e. they explain the difference between findandmodify and update instead of simply explaining atomicity)", "what should i do if i want to use a variable instead of a hard coded date for e.g. instead of 'created_at: { $gte: isodate(\"2010-04-29t00:00:00.000z\"), $lt: isodate(\"2010-05-01t00:00:00.000z\") }' i am using a date filter and want something like: 'created_at: { $gte: from_date, $lt: to_date }' but my query is defined inside a meteor helper and my variables are created inside template events (i am using meteorjs by the way).", "this is really the best answer. solves the issue without involving some other programming language or package, and works with all drivers that support the aggregate framework (even meteor!)", "note that the transactions of two-phase commits are not acid-compliant. for some reason i inferred the opposite until i followed the link.", "i tried setting the profiling level to 2 but i also needed to set the second parameter to -1, like code_removed", "many in the community would prefer no limit with warnings about performance, see this comment for a well reasoned argument: my take, the lead developers are stubborn about this issue because they decided it was an important \"feature\" early on. they're not going to change it anytime soon because their feelings are hurt that anyone questioned it. another example of personality and politics detracting from a product in open source communities but this is not really a crippling issue.", "you just need to run query code_removed output of this query is code_removed as you expected it'll gives the exact field from array that matches color:'red'.", "i have been using mongodb.net driver for a little over a month now. if i were to do it using.net driver, i would use update method on the collection object. first, i will construct a query that will get me all the documents i am interested in and do an update on the fields i want to change. update in mongo only affects the first document and to update all documents resulting from the query one needs to use 'multi' update flag. sample code follows... code_removed", "check out this: change streams january 10, 2018 - release 3.6 *edit: i wrote an article about how to do this it's new in mongodb 3.6 2018/01/10 code_removed in order use changestreams the database must be a replication set more about replication sets: your database will be a \"standalone\" by default. how to convert a standalone to a replica set: the following example is a practical application for how you might use this. * specifically for node. code_removed useful links:", "see this question: stackoverflow.com/questions/3366397/\u2026. it's really easy to do it from the mongo shell.", "how to do this for the entire database instead of one by one for each collection", "look under querying: sorting and natural order, as well as sort() under cursor methods", "just pushed mongoclikker to github. it's a dead simple mongodb viewer written in node.", "code_removed", "for absolute clarity, here is a sequence of shell commands that will demonstrate the problem: pastebin.com/tpt474te", "while the built in http interface of mongodb isn't exactly what you are asking for, but it is available and supports a rest interface to do simple queries, etc. this is built-in to the mongo instance with a default of port 28017. documentation:", "actually, there is an equivalent of sql's code_removed in mongodb. first, you convert multiple documents into an array of documents; then you insert the array into the target collection code_removed", "i had same problem, after realizing i had mistakenly changed an int32 to double, setting it back using numberint() did not fix the type unless i first changed to a different value.", "this one will take high performance", "this output was very concise and clear:", "so helpful, thank you! \ud83d\ude00", "please add description to code.", "convert your dates to gmt timezone as you're stuffing them into mongo. that way there's never a timezone issue. then just do the math on the twitter/timezone field when you pull the data back out for presentation.", "to render html page in node try the following, code_removed you need to install code_removed module through code_removed like: code_removed", "this is _reidiculous.", "from the command line issue code_removed which gives output code_removed", "if after did that you cannot connect, it's because you are trying to connect on the code_removed db, use another db and try again. only a useradmin(anydatabase) can connect on code_removed.", "submitting this as an answer as i don't have the privilege to comment. i have a 3 member replica set (version 3.4) and faced the same issue with the below command. mongoimport --db test --drop rides.json got the same error with the below command suggested by whythecode,<br/> mongoimport --host=127.0.0.1 --db test rides.json the following command was able to import mongoimport --host=127.0.0.1:27018 --db test rides.json note that the primary was running on 27018. also, it wasn't necessary to reset the replica set or run it as standalone.", "+1 for the comment about print debugging, couldn't agree more. are you sharing your logging code on github or somewhere? i was considering doing that myself, but i haven't got much code to share yet. i forked github.com/rsdoiel/mongo-modules but haven't added anything yet.", "for loopback3 all the examples given did not work for me, or as fast as using rest api anyway. but it helped me to figure out the exact answer i needed. code_removed", "@guymograbi \u00bfdid you mean mongodb code_removed?:)", "couchdb has acid support.couchdb.apache.org/docs/overview.html", "in debian/ubuntu, you'll need to edit the /etc/init.d/mongodb script. really, this file should be pulling the settings from /etc/mongodb.conf but it doesn't seem to pull the default directory (probably a bug) this is a bit of a hack, but adding these to the script made it start correctly: add: code_removed change: code_removed to: code_removed", "afaik, the same applies to cassandra as well. untar, run the daemon. the test cluster is setup and ready for production!", "i came across lot of posts searching for the same - \"mongodb joins\" and alternatives or equivalents. so my answer would help many other who are like me. this is the answer i would be looking for. i am using mongoose with express framework. there is a functionality called code_removed in place of joins. as mentioned in mongoose docs. there are no joins in mongodb but sometimes we still want references to documents in other collections. this is where population comes in. this stackoverflow answer shows a simple example on how to use it.", "what would be the regex for code_removed", "possible duplicate of mongodb: server has startup warnings", "+1 good answer.", "what is the query? if i want to have case insensitive search for the same example.", "code_removed", "if your collection is equally distributed over time, you can use a timestamp to efficiently pick a random record. see stackoverflow.com/questions/2824157/random-record-from-mongo\u200c\u200bdb/\u2026.", "i have mongo db installed in the following path code_removed. i have configured my environment variable path in advanced settings.i also have mongod running.when i run the following command mongorestore dump from the following path code_removed (this contains the bson files) i'm getting this error: don't know what to do with the dump file i have referred to this thread to check my path.", "code_removed", "for the 3rd argument i suggest putting \"localhost\". edited for clarity", "worked for me too. i saved the file with lf line ending on os x and it worked.", "i know this answer is coming really late on in this thread but i hope you check it out. the reason you get that error is based on the specific role that you granted to the user, which you have gathered by now, and yes giving that user the role code_removed will solve your problem but you must first understand what these roles do exactly before granting them to users. in tutorial you granted the user the code_removed role which basically give the user the ability to manage users of all your databases. what you were trying to do with your user was outside its role definition. the code_removed role has this role included in it definition as well as the code_removed, code_removed and other roles making it a superuser (basically because you can do anything with it). you can check out the role definitions to see which roles you will need to give you users to complete certain tasks. its not advisable to make all your users super ones:)", "wow! simple, clean and fast! superb!", "great answer. when setting up multiple instances on development machine (trying the replication set before deployment) it helps to have a.bat code_removed and then have shutdown.bat code_removed", "this one is more useful", "if you are using express framework to node.js install npm ejs then add config file code_removed ; render the page from exports module form.js have the html file in the views dir with extension of ejs file name as code_removed then create the form.js code_removed", "how do i define my servername and dbname?", "please add the `{ page: parseint(req.query.page) || 0,...} to the parameter.", "you were close with code_removed but your second parameter should be an object with a modification operator for example code_removed", "i think that while not elegant, the oplog could be partially used for this purpose: it logs all the writes - but not the reads... you have to enable replicatoon, if i'm right. the information is from this answer from this question: how to listen for changes to a mongodb collection?", "@thomasbratt how can we handle the case when the mongo connection dies at a later stage after being connected? trying to reuse the db object that results from mongoclient.connect() would fail in that scenario untill the node application is restarted.", "clever phrasing about opininons;) but the picky admins closed it anyway;)", "@ariso: this is optimisation by denormalisation. it can provide a performance boost. however, if you do this, then you're throwing away your clean design, and all of the power (not to mention most of the features) of a relational database. and it only really works until you hit the column limit.", "actually, it depends. if the query doesn't use an index, and must do a table scan, then it can certainly be expensive. if you're doing a 'starts with' regex query, then that can use an index. best to run an explain() to see what's happening.", "this feature of robomongo is still unstable. it's a 50/50 chance to make it work.", "i followed the doc at after configured and reboot, i executed code_removed and got code_removed. at last, i found that code_removed had started. i think the code_removed added it to auto start. to check if your code_removed is running: code_removed. hope this can help someone has same problem.", "this question is highly constructive. thanks for asking.", "correct, $lookup was introduced in mongodb 3.2. details can be found at docs.mongodb.org/master/reference/operator/aggregation/looku\u200c\u200bp/\u2026", "if you're able to run php scripts you can give php mongodb admin a try. it's a single php script that gives you basic management and searching functionality.", "@farizfakkel we need to have the logs files anyways...", "if i want to use \"size_of_name\" inside projection then how can i do that?? actually i want to use $slice inside projection where its value is equal to $slice: [0, \"size_of_name\" - skip]??", "very well explained.", "@stennie, is that statement still true in 3.4? docs.mongodb.com/manual/reference/operator/query/regex/\u2026", "i tried code_removed but i get an security error on code_removed collection:(", "of c,a & p (consistency, availability & partition tolerance) which 2 are more important to you? quick reference, the visual guide to nosql systems mongodb: consistency and partition tolerance couchdb: availability and partition tolerance a blog post, cassandra vs mongodb vs couchdb vs redis vs riak vs hbase vs membase vs neo4j comparison has 'best used' scenarios for each nosql database compared. quoting the link, mongodb: if you need dynamic queries. if you prefer to define indexes, not map/reduce functions. if you need good performance on a big db. if you wanted couchdb, but your data changes too much, filling up disks. couchdb: for accumulating, occasionally changing data, on which pre-defined queries are to be run. places where versioning is important. a recent (feb 2012) and more comprehensive comparison by riyad kalla, mongodb: master-slave replication only couchdb: master-master replication a blog post (oct 2011) by someone who tried both, a mongodb guy learns couchdb commented on the couchdb's paging being not as useful. a dated (jun 2009) benchmark by kristina chodorow (part of team behind mongodb), i'd go for mongodb. hope it helps.", "@vinipsmaker i personally would build an app and then populate it with test data and then separate that test data from the app and call that the project. that method always produces the best results from my own experience. i personally use a youtube like site i made, it has a rather complex and intricate schema but it is quite simple to understand making for a decent testing and learning curve for data manipulation", "is it possible to modify the mongodb oplog and replay it? a bug caused an update to be applied to more documents than it was supposed to be, overwriting some data. data was recovered from backup and reintegrated, so nothing was actually lost, but i was wondering if there was a way to modify the oplog to remove or modify the offending update and replay it. i don't have in depth knowledge of mongodb internals, so informative answers along the lines of, \"you don't understand how it works, it's like this\" will also be considered for acceptance.", "to convert int32 to string in mongo without creating an array just add \"\" to your number:-) code_removed", "execfind(function(... for example: code_removed", "@shemeermali you're right that it's better to stipulate the full command - the answer has been updated. thanks!", "i ended up solving this by starting mongod like this (hammered and ugly, yeah... but works for development environment): code_removed this enables profiling and sets the threshold for \"slow queries\" as 1ms, causing all queries to be logged as \"slow queries\" to the file: code_removed now i get continuous log outputs using the command: code_removed an example log: code_removed", "querying for a date range (specific month or day) in the mongodb cookbook has a very good explanation on the matter, but below is something i tried out myself and it seems to work. code_removed based on my experiments you will need to serialize your dates into a format that mongodb supports, because the following gave undesired search results. code_removed in the second example no results were expected, but there was still one gotten. this is because a basic string comparison is done.", "i found this easy to remember: code_removed", "same issue on my mac (using brew) solved using: code_removed", "yes you can. the default location for script files is data/db if you put any script there you can call it as code_removed", "\"cache invalidation is one of computer science's hard problems; the other is naming things.\" so true!", "also useful for the bson file exported via code_removed if you're only exporting single collections. code_removed was giving me \"invalid character\" errors. thanks!", "looks like a lot of things have changed in the past 5 years. that list is massive!:)", "not using $set might be a bad habit to get into if you're going to be using the native driver from time to time though.", "i use two levels of nested sub-schema collections. in other words, i have a subschema collection similar to your example. within that, i use another different sub-schema collection. i want only the first level sub-schema model instances to not use ids, but the second level (nested) sub-schema model instances need to have ids. when i use your solution, that is, specifying code_removed, both levels of sub-schema are without ids. any way to work around this behavior?", "i did look into the mongo logs. all it kept saying way that lack of the /data/db directory was preventing startup. eventually came across your answer and that seems to be the reason for the issues?", "code_removed", "i agree with purplepilot, you should choose a technology that fits a solution, not try to graft a solution that isn't appropriate on to a problem. modeling data for the graph databases is a completely different paradigm than rdbms design and you have to forget everything you know and relearn the new way of thinking.", "possible duplicate of mongodb: perform a date range query from the objectid in the mongo shell", "you can do it with the following code. code_removed", "how to setup mongodb so it can run as windows service?", "@stennie so if i use the $regex with case-sensitive prefix i will be utilizing the index if i use the regex code_removed? also do you happen to know any good documentation for a tokenising approach?", "while useful i wouldn't... say mongovue is yet a \"true\" visual tool. it does not allow for editing of collections/documents at this time (for example.) however, here a q&a about it's upcoming features: learnmongo.com/posts/qa-ishann-kumar-creator-of-mongovue", "does this run pre/post-remove middleware? (some model methods bypass document middleware and i'm not sure if this is one of them, the docs are unclear)", "thank you code_removed! in a linux environment, here's a better way to have only one file run the show. say you have two files, code_removed with multiple commands: code_removed and then the driver shell file, code_removed code_removed instead, have just one file, runmongocmds.sh containing code_removed bash's code_removed is much more robust than code_removed and allows for the code_removed between commands to force them on multiple lines.", "turns out there's a problem with backticks. try running code_removed instead of the original command.", "robert stewart have already answered for how to import with mongoimport. i am suggesting easy way to import csv elegantly with 3t mongochef tool (3.2+ version). might help someone in future. you just need to select collection select file to import you can also unselect data which is going to import. also many options are there. collection imported see how to import video", "how to rewrite this query with mongoose's code_removed or code_removed and code_removed methods? just curious. if they provide those code_removeds and code_removed so there might be a reason for it.", "in you command prompt, first connect to mongodb using following command: code_removed you will be accessing db with code_removed. run the following command to drop the whole database: code_removed", "i had a similar issue and followed all the instructions above regarding changing owners using sudo chown etc. i still had an instance of mongodb running in the background after the changes. running code_removed showed me other tasks using mongo running in background that weren't closed properly. i then ran kill on all the ones running and then could start my server.", "db.example.update({},{$unset:{field:1, multi:true}}) nic's query didn't work for me.", "code_removed this is equivalent to - select roll from student db.student.find({}, {\"roll\":1, \"name\":1, \"_id\":0}) this is equivalent to - select roll, name from student", "i believe this is the fastest query that answers your question, because it doesn't use an interpreted code_removed clause: code_removed it means \"all documents except those without a name (either non existant or empty array) or with just one name.\" test: code_removed", "working on mongodb 3.4 [windows] create dir c:/mongodb/data create a file in c:/mongodb/mongodb.config using this configuration: code_removed to install mongodb as a service, run this command in powershell with admin power mongod --config=\"c: mongodb mongodb.config\" --install --service open services.msc and look for mongodb, then start it", "fullname like 'last' with status==\u2019pending\u2019 between two dates: code_removed status== 'pending' and orderid like \u2018pha876174\u2019: code_removed", "i was hoping for something that would actually allow to do things like get a count of objects created before a certain time using the time embedded in the objectid, but it seems like that'd don't directly accessible. thanks.", "it seems that mongodump don`t work if you have password protected mongo instance (and you should!)", "this approach does not works if you try to check string which contains regex-related characters. for example question mark or asterisk.", "this tool is dead. no commits since 2010-aug.. if you want a tool written in php, use rockmongo instead.", "if the collection name is numeric, then this should work instead: code_removed", "one datestamp is already in the _id object, representing insert time so if the insert time is what you need, it's already there: login to mongodb shell code_removed create your database by inserting items code_removed lets make that database the one we are on now code_removed get the rows back: code_removed get each row in yyyy-mm-dd hh:mm:ss format: code_removed if that last one-liner confuses you i have a walkthrough on how that works here: protip, mongodb is best db because mongodb is web-scale:", "if you're using robomongo, this article tells you how to enable uuidhelpers.js: robomongo.org/articles/uuids.html", "with express 3.4.2: app.set('view engine', 'ejs');", "here you are: github.com/rsercano/mongoclient written in meteorjs, has most platforms distributions.", "code_removed does the same thing also. the code_removed tells code_removed to send a sigterm signal, which it does by default.", "@supericy that's definitely not nitpicking. that's just yet more evidence of this person's terrible coding practices.", "i am trying to setup the authentication on mongodb. i've uncommented code_removed in configuration file and restarted the server. the first connection via mongo was rejected. the second one (immediately after the first one) went through and i got this in the logs: code_removed while in console, i am able to execute commands, however if i try to follow any of the numberous tutorials (including the official ones), i get either code_removed when executing code_removed or code_removed when executing code_removed: the object which i am passing is: code_removed", "this should not be the accepted answer. calling code_removed on a large collection could crash the client. you can't pull 10 tb of data into the client's memory and then try to code_removed it. you need to iterate it and let the driver handle batching.", "in my case, i had to use a subset of attributes from the old collection in my new collection. so i ended up choosing those attributes while calling insert on the new collection. code_removed", "this could be made more \"atomic\" by having a query filter such as code_removed, instead of just the code_removed filter. dunno about performance, partial failures, etc, cause i'm a mongodb noob, but i think it would have stronger consistency guarantees. not sure if this would lock the collection or each document as you loop through, but might be worth checking out.", "@savvas why would you put all the tweets in single document? use one document per tweet, put the trending topic as another field on the document. put an index on that topic field and then aggregate on that field using the mongo pipeline. it take some adjusting of how you do things to work with nosql, once you adjust your methods and thinking you'll find it works great for many big data use cases.", "also for me. installing mongo via homebrew on my osx doesn't add a mongod user and group.", "huh? this is unnecessary. code_removed is used when you have multiple query values and the document needs to match one of them. for the reverse (which is what this question is about), johnnyhk's answer is correct. i was going to downvote but i guess this answer may be helpful to other people who end up on this page.", "as well as those mentioned by shingara, there's also: opricot phpmoadmin mongohub (i've heard mixed reviews on this one, not sure if it's maintained)", "can we please get code_removed as the answer shown here and checked in green? otherwise people are making the same mistake i did countless times when they come to this answer - and attempt to use code_removed and the error comes back code_removed.", "see below for actual calculation with work shown.", "@musaffa you are correct, but it was at the time i wrote that (two and a half years ago). i'll cross that remark out.", "@chrishinkle why do you say that?", "@anders\u00d6stman code_removed is immutable and cannot be updated, atomically or no. to answer your question for a field which can be changed, you could use code_removed which would always be applied and takes precedence over the query (code_removed).", "there is an working java example which can be found here. code_removed the key is query options given here. also you can change find query, if you don't need to load all the data every time. code_removed", "@sureshpareek you can configure this in the mongodb.conf file if you do not want to pass it everytime, more info here: docs.mongodb.com/manual/reference/configuration-options/\u2026", "what are those attributes? people? so do you have events x people that participates in a event? are those people registered in your system? if you're just starting at mongodb, take a look at this: code.google.com/p/morphia/wiki/quickstart", "none of the solutions worked for me until i added a callback: db.test_users.remove( {\"_id\": '4d512b45cc9374271b02ec4f'}, function(err, data){});", "seeing as this answer assumes a rather old version of mongoose, i really wouldn't object to someone changing the accepted answer.", "hopefully bj clark won't choose to use all those technologies in the same project. that would be a bit of a learning curve.", "windows 10 here,can confirm it only works without compass.", "this won't work if two comments have identical contents. one might argue that we could also add author to the search query, which still wouldn't work if the author made two identical comments with same content", "i think he means directly from the prompt doesn't he? in that case you either have to generate a.js file with those commands and invoke it from the prompt using \"mongo dropdb.js\" or something or do as you say and remove the files manually.", "you can create zip file by using following command.it will create zip file of database {dbname} provided.you can later import the following zip file in you mongo db. code_removed", "wow, i had no idea this was something special in mongodb wasted a bit of time thinking my problem was elsewhere, but finding it just required additional rules. for what it's worth people using express and node will need to require objectid exp... var objectid = require('mongodb').objectid;", "$ne:null will not match a document that does not have that field because the value of the non-existent field is null and $ne:null is looking for fields that are not equal to null. so the answer to your questions are yes for the first and no for the second.", "just to note that what i want was to serve only one.html file because my app was single page;)", "i'm sure i'm missing something very basic in mongodb queries, can't seem to get this simple condition. consider this collection code_removed i would simply like to query all the items that are \"not deleted\" i know how to find the item that has a \"deleted\" flag set to true: code_removed but how do i find all items that are not code_removed (e.g. negate the above query, or in other words, any items that either doesn't have a code_removed field, or have it with value code_removed what i tried by guessing (please don't laugh...) code_removed (returns no results) code_removed error: { \"$err\": \"invalid operator: $eq\", \"code\": 10068 } code_removed error: { \"$err\": \"invalid use of $not\", \"code\": 13041 } code_removed error: { \"$err\": \"invalid use of $not\", \"code\": 13034 } what am i missing?", "i had the same problem, and solved by simply doing this at the command line: code_removed", "also, from the command line: code_removed", "the project is simple, but you have to support transactions for payment, which makes the whole thing difficult. so, for example, a complex portal system with hundreds of collections (forum, chat, ads, etc...) is in some respect simpler, because if you lose a forum or chat entry, nobody really cares. if you, on the otherhand, lose a payment transaction that's a serious issue. so, if you really want a pilot project for mongodb, choose one which is simple in that respect.", "according to that page, it only works in unix enviros, and i don't have it in my bin dir in windows. any recommended windows equiv?", "@seymourcakes kindly correct me if i'm wrong, but i think sendfile now supports caching: devdocs.io/express/index#res.sendfile", "be careful with findone and remove! code_removed the code above removes all users named 'alice' instead of the first one only. by the way, i prefer to remove documents like this: code_removed or provide a callback and omit the exec() code_removed", "according to stackoverflow.com/questions/12286873/\u2026 db.copydatabase() does an in-memory copy. is that true?", "asya, thank you for this feedback - it is most helpful. the environments that share the one server are both testing environments, so i am not concerned regarding their competing for resources. however, saying that, i would like the best setup. i can split the disk in to multiple partitions. how can this be setup with mongo, connection strings etc to it?", "thanks for you help. in this query is group specified fields, i just want group by one field, and then result others specify fields. any good idea?", "could always do: code_removed to get that compact view. also, i find it very useful to limit the fields returned by the find so: code_removed which would return only the _id and name field from foo.", "to remove or delete field in mongodb for single record code_removed for multi record code_removed", "i've read that page before. ironically enough i actually linked to the same page in a previous answer. and i did see the \"reasonably high probability of being unique\" disclaimer but was unsure if the collection being inserted into played any factor in this. i guess what i'm unsure of is what exactly the 2 byte process id portion of the objectid really represents. if it has something to do with the collection then there would be uniqueness between two different documents created at the exact same time on the exact same machine in different collections.", "already u got the answers but to match regex with case insensitivity you could use the following query code_removed the code_removed in the code_removed indicates case insensitivity and code_removed provides a more pretty output", "neils answer. just to let people know you cannot run this on a large database if you are lets say doing it remote shell like robomongo. you will need to ssh into your actual server's mongo shell. also you could also do this if you would rather do an update. code_removed", "@justin jenkins: i agree with you but it really depends from site. so i belive that for sites like stackoverflow need to create separate document for comment.", "@terjetyl you have to really plan for it. what fields are you going be presenting on the front end, if it's a limited amount in an individual view then you take those as embedded documents. the key is to not need to do joins. if you want to do deep analysis, you do it after the fact in another database. run a job that transforms the data into an olap cube for optimal performance.", "there is a question already in stackoverflow, very similar with my question. the thing is that the answer for that questions was for a java driver, i am trying to do it in the shell. i am doing this... code_removed this is not working!", "update: this answer appears to be out of date; it seems that custom sorting can be more or less achieved by using the code_removed function of the aggregation pipeline to transform the input documents prior to sorting. see also @ari's answer. i don't think this is possible directly; the sort documentation certainly doesn't mention any way to provide a custom compare function. you're probably best off doing the sort in the client, but if you're really determined to do it on the server you might be able to use code_removed to arrange to run the sort on the server (if your client supports it). server-side sort: code_removed versus the equivalent client-side sort: code_removed note that it's also possible to sort via an aggregation pipeline and by the code_removed operator (i.e. in addition to code_removed) however neither of these ways lets you provide a custom sort function either.", "not only code_removed, also need code_removed and code_removed and after reboot os you need to delete \"mongod.lock\" manually", "i'll just leave this here: json-generator.com", "the valid use case is to avoid the difficulties in dealing with timezones in javascript. see my answer below. i find it easier to deal with parsing/formatting strings like code_removed than to try to coordinate client and server timezones and create a code_removed object at the proper date. remember we\u2019re saving just dates here, not datetimes.", "my code can't insert new database in node.js.", "awesome, this worked for me. glad i scrolled down to find the highest-voted answer. smh stackoverflow, you gotta get these higher voted answers up there when there's no accepted solution to the question. curious to know what could be the cause of this mongodb problem", "404 this is not the web page you are looking for.", "did you mean to say code_removed or code_removed?", "i created code_removed in root directory and ran code_removed: code_removed", "great answer! for multiple commands, this also works: code_removed", "as you can see in mongo docs - since version 3.2 code_removed index is case-insensitive by default: create a text index and use $text operator in your query.", "if you are using --auth, you'll need to include your username/password in there... also you must be on the \"destination\" server when you run the command. code_removed if all that doesn't work, you might want to try something like creating a slave of the database you want to copy...", "@d-klotz: both, really. at least when i was using mongodb at the time. contrast sql server, where indices in memory is often the most critical aspect.", "very useful since setting code_removed doesn't wipe the field during save like my library does - it actually saves null", "solr has a feature that support schema or no-schema!", "i've googled around but couldn't find a working mongodb viewer or data browser. an ideal (for my needs) tool would be a web based viewer with dead simple features (browsing and doing queries).", "in the mongodb shell, how do i list all collections for the current database that i'm using?", "would be nice to update the answer to recommend other alternatives (like code_removed, and also because this is hardcoded for \"1\" and doesn't scale to an arbitrary or parametric minimum array length.", "i was perhaps overly strict in my answer. there's nothing wrong in storing blog posts and associated comments in mongodb or similar database. it's more that people tend to overuse the abilities document based databases give (most radical example would be to store all your data in a single document called 'blog')", "if u install by brew (on osx) first run code_removed start mondodb daemon by typing code_removed (leave it open) and then run mongo by typing code_removed in new terminal tab", "this pointed me in the right direction. on my server i had to do sudo rm /var/log/mongodb/mongodb.log and sudo rm /tmp/mongodb-27017.sock.", "you can use code_removed code_removed but remember to set: session.setsafe code_removed otherwise it will return 0 on every call.", "i might be a bit late to this party, but i've just come across this problem. my solution was to build a dictionary of (in my case) code_removed to position (that is, position in the list i used for the code_removed query), and then use that to rearrange the output. i am operating on a small number of items, though, so perhaps this isn't helpful for your case.", "@geoffrey i was referring to using binary data to store dates. storing them as strings is perfectly valid. that said i'm a strong proponent of never dealing with timezones on the server side to begin with and store everything as utc. after that you can do timezone conversion on the client. a lot cleaner.", "code_removed works like code_removed: code_removed", "these are the steps to install mongodb as windows service: create a log directory, e.g. code_removed create a db directory, e.g. code_removed prepare a configuration file with following lines code_removed code_removed place the configuration file with name mongod.cfg in folder \"c: mongodb \" following command will install the windows service on your code_removed once you run this command, you will get the code_removed run following command on command prompt code_removed", "starting with 2.8 version, you can compress your data, which saves significant amount of space.", "this gist can be time saving for devleopment machine setups gist.github.com/serdarb/5102848", "this does not provide an answer to the question. to critique or request clarification from an author, leave a comment below their post. - from review", "perhaps it's the time, perhaps it's me drowning in sparse documentation and not being able to wrap my head around the concept of updating in mongoose:) here's the deal: i have a contact schema and model (shortened properties): code_removed i receive a request from the client, containing the fields i need and use my model thusly: code_removed and now we reach the problem: if i call code_removed i'll receive an error if the contact with the same phone number already exists (as expected - unique) i can't call code_removed on contact, since that method does not exist on a document if i call update on the model: code_removed i get into an infinite loop of some sorts, since the mongoose update implementation clearly doesn't want an object as the second parameter. if i do the same, but in the second parameter i pass an associative array of the request properties code_removed it works - but then i have no reference to the specific contact and cannot find out its code_removed and code_removed properties. so the bottom line, after all i tried: given a document code_removed, how do i update it if it exists, or add it if it doesn't? thanks for your time.", "also just starting out w mongo. i think this part of the manual is important: docs.mongodb.org/manual/applications/indexes. it leads me to this imprpession that mongodb db design, can, and should be very similar to db design, and so, i'd pulmp for yr first option, especially if you intend to do \"cross-event\" quesries", "you can absolutely shard data in mongodb (which partitions across n servers on the shard key). in fact, that's one of it's core strengths. there is no need to do that in your application. for most use cases, i would strongly recommend doing that for 6.6 billion documents. in my experience, mongodb performs better with a number of mid-range servers rather than one large one.", "deprecated since version 3.0.", "great answer... this is probably what the user was getting at", "we can merge/join all data inside only one collection with a easy function in few lines using the mongodb client console, and now we could be able of perform the desired query. below a complete example, .- authors: code_removed .- categories: code_removed .- books code_removed .- book lending code_removed .- the magic: code_removed .- get the new collection data: code_removed .- response:) code_removed i hope this lines can help you.", "actually for me the major challenge is going back if you need to. once you remove \"relational constraints\" from your mind it is difficult to go back.:)", "this syntax is useful if the value is stored in a variable, so the query could be write as (in ruby): code_removed", "all the answers are different because all this error really means is that some of your flags are incorrect. which flags are incorrect will depend on what your restoring and where your restoring it. use code_removed to get a list of the current flags on your instance to debug this issue.", "is it possible to insert field after specific field? as of now it inserted after end of last field.", "read this stackoverflow.com/questions/10336899/\u2026", "suppose we have a collection like below: code_removed we want to know if the bottle field is present of not? ans: code_removed", "what is the command to get the number of clients connected to a particular mongodb server?", "ok, that's what i expected. so let's say i'm making the query via pymongo. then i can either: 1. make a separate mongodb for each id in id_array and append it to the end of a list (inefficient because of the excess queries), or 2. make the single mongodb query given in my question, then use python to copy the results from mongodb into a properly ordered list (inefficient because i'm copying potentially large amounts of data on the client side)? there isn't a better way? some kind of custom query i can run on mongodb that will sort the results before they're returned?", "@thilo: mongodb has no special 'datetime' object as far as i know. it uses the javascript date type, which is stored in bson form.", "@joachimisaksson thanks, but i wonder do i really need to increase them?", "the last n added records, from less recent to most recent, can be seen with this query: code_removed if you want them in the reverse order: code_removed if you install mongo-hacker you can also use: code_removed if you get tired of writing these commands all the time you can create custom functions in your ~/.mongorc.js. e.g. code_removed then from a mongo shell just type code_removed", "@amida you can do code_removed for example to avoid printing all the noise you say", "> db.car.distinct('name') [ \"honda\", \"tat\", \"tata\", \"tata3\" ] > db.car.find({\"name\":/. ta. /})", "if during the creation of that sub-document, i explicitly assign code_removed, would that _id be unique across collection then?", "since i just stepped into this, let me add that some drivers (e.g. c), though uses increments, does not increment atomically, so time to time, it generates the same oid due to race condition", "it is not a good answer it's an answer on how to get keys of one element in the collection not all keys in the collection!", "my mongo (3.2.9) was installed on ubuntu, and my log file had the following lines: code_removed 2016-09-28t11:32:07.822+0100 i control [initandlisten] dbexit: rc: 100 so the problem was in permissions on /var/lib/mongodb folder. code_removed restart the server fixed it, although i do realise that may be not too secure (it's my own dev box i'm in my case), bit following the change both db and authentication worked.", "this is what i done it on code code_removed that is how i done it.", "i haven't used cassandra, but i have used mongodb and think it's awesome. if your after simple setup, this is it. you simply untar mongodb and run the mongod daemon and that's it..it's running. obviously that's only a starter, but to get you started it's easy.", "1) the best way is to set static folder. in your main file (app.js | server.js |???): code_removed public/css/form.html public/css/style.css then you got static file from \"public\" folder: code_removed 2) you can create your file cache. use method fs.readfilesync code_removed", "aha! that's probably it. we're on 2.4.", "this worked perfectly for me, thank you!", "i just released a simple web-based data viewer called mongs. it isn't a server admin gui, it's focused on data browsing, which sounds like what you're interested in. mongs is implemented in python using the aspen web framework.", "the answer to your question is more complicated that you would expect! the main reason it's complicated is that for historical reasons (unfortunately) different drivers have written uuids to the database using different byte orders. you don't mention which driver you are using, but i'll use the c# driver as an example. suppose i use the following code to insert a document: code_removed if i then examine the document using the mongo shell, it looks like this: code_removed the mongo shell has a built-in function called hex that you can use to display the binary value as a hex string: code_removed look carefully: the byte order of the hex string doesn't match the original uuid value used in the c# program. that's because the c# driver uses the byte order returned by microsoft's tobytearray method of the guid class (which sadly returns the bytes in a bizarre order, which fact was not discovered for many months). other drivers have their own idiosyncracies. to help out with this we have some helper functions written in javascript that can be loaded into the mongo shell. they are defined in this file: the mongo shell can be told to process a file as it starts up by providing the name of the file on the command line (along with the --shell argument). having loaded this file we have access to a number of helper functions to create and display bindata values that are uuids. for example: code_removed in this example the tocsuuid function is used to display a bindata value as a csuuid and the csuuid function is used to create a bindata value for a uuid using the c# driver's byte ordering conventions so that we can query on a uuid. there are similar functions for the other drivers (tojuuid, topyuuid, juuid, pyuuid). some day in the future all drivers will standardize on a new binary subtype 4 with a standard byte order. in the meantime you have to use the appropriate helper function that matches whatever driver you are using.", "i tried in this model as per my requirements i need to store a date when ever a object is created later i want to retrieve all the records (documents ) between two dates in my html file i was using the following format mm/dd/yyyy code_removed in my py (python) file i converted it into \"iso fomate\" in following way code_removed and saved in my dbmongo collection with \"selecteddate\" as field in my collection to retrieve data or documents between to 2 dates i used following query code_removed", "i have a set like so code_removed how do i save a subset of those documents with the date '20120105' to another collection? i.e code_removed", "great @machavity.", "for anyone getting the empty array of docs like @chovy, you can also try removing the quotes from '_id' in the find statement. worked for me.", "what ever it is, the order of calling functions should have nothing to do with the end result.", "if you are coming from the mysql world, mongodb is going to \"feel\" a lot more natural to you because of its query-like language support. i think that is what makes it so friendly for a lot of people. couchdb is fantastic if you want to utilize the really great master-master replication support with a multi-node setup, possibly in different data centers or something like that. mongodb's replication (replica sets) is a master-slave-slave-slave-* setup, you can only write to the master in a replica set and read from any of them. for a standard site configuration, that is fine. it maps to mysql usage really well. but if you are trying to create a global service like a cdn that needs to keep all global nodes synced even though read/write to all of them, something like the replication in couchdb is going to be a huge boon to you. while mongodb has a query-like language that you can use and feels very intuitive, couchdb takes a \"map-reduce\" approach and this concepts of views. it feels odd at first, but as you get the hang of it, it really starts feeling intuitive. here is a quick overview so it makes some sense: couchdb stores all your data in a b-tree you cannot \"query\" it dynamically with something like \"select * from user where...\" instead, you define discrete \"views\" of your data... \"here is a view of all my users\", \"here is a view of all users older than 10\" \"here is a view of all users older than 30\" and so on. these views are defined using map-reduce approach and are defined as javascript functions. when you define a view, the db starts feeding all the documents of the db you assigned the view to, through it and recording the results of your functions as the \"index\" on that data. there are some basic queries you can do on the views like asking for a specific key (id) or range of ids regardless of what your map/reduce function does. read through these slides, it's the best clarification of map/reduce in couch i've seen. so both of these sources use json documents, but couchdb follows this more \"every server is a master and can sync with the world\" approach which is fantastic if you need it, while mongodb is really the mysql of the nosql world. so if that sounds more like what you need/want, go for that. little differences like mongo's binary protocol vs the restful interface of couchdb are all minor details. if you want raw speed and to hell with data safety, you can make mongo run faster than couchdb as you can tell it to operate out of memory and not commit things to disk except for sparse intervals. you can do the same with couch, but it's communication protocol is going to be 2-4x slower than raw binary communication with mongo in this \"speed over everything!\" scenario. keep in mind that raw crazy insane speed is useless if a server crash or disk failure corrupts and toasts your db into oblivion, so that data point isn't as amazing as it might seem (unless you are doing real-time trading systems on wall street, in which case look at redis). hope that all helps!", "thanks it worked for my complete folder after extrackting from tar.gz", "@chovy try converting them to objectids first, instead of passing strings.", "you can create a javascript loop that do the job and then execute it in the mongoconsole. code_removed save it to dropall.js and then execute: code_removed", "you can use the command below for running mongodb as a windows service code_removed if you use mongodb with default parameters, you can use these values: youripadress: 127.0.0.1 or localhost yourportnumber: 27017 (default port) or dont put --port servicedisplayname: only if you run more than one service (since mongodb 1.8) there's more information on this command here", "@dandascalescu -may be it did not add anything but what is your concern here?", "@duck5auce please update this answer, it is out dated. river has been deprecated", "mongodb 2.6 and newer use yaml config files. old format is still supported for backwards compatibility, but you may want to use the new one. details here.", "you would have received more upvotes had your score already been higher. that's how most here think. your answer is useful in the context of the question. i've upvoted you.", "ok, that's what i expected. so let's say i'm making the query via pymongo. then i can either: 1. make a separate mongodb for each id in id_array and append it to the end of a list (inefficient because of the excess queries), or 2. make the single mongodb query given in my question, then use python to copy the results from mongodb into a properly ordered list (inefficient because i'm copying potentially large amounts of data on the client side)? there isn't a better way? some kind of custom query i can run on mongodb that will sort the results before they're returned?", "this is the most complete response to the op. esp. regarding the 'tail-able' requirement.", "i was trying to set up an angular app with an express restful api and landed on this page multiple times though it wasn't helpful. here's what i found that worked: code_removed then in the callback for your api routes look like: code_removed your client side framework can handle routing. express is for serving the api. my home route looks like this: code_removed", "unfortunately, you can't use the code_removed operator more than once per key.", "to reference a package and remove various \"keys\", try this code_removed", "submitting this as an answer as i don't have the privilege to comment. i have a 3 member replica set (version 3.4) and faced the same issue with the below command. mongoimport --db test --drop rides.json got the same error with the below command suggested by whythecode,<br/> mongoimport --host=127.0.0.1 --db test rides.json the following command was able to import mongoimport --host=127.0.0.1:27018 --db test rides.json note that the primary was running on 27018. also, it wasn't necessary to reset the replica set or run it as standalone.", "@nielsvanderrest what's the meaning of 389z and 240z? and, how can i insert my own date and time? when i insert something like code_removed, it changes the time!", "according to docs, code_removed includes documents that do not contain the field. has this changed since you posted the answer? docs.mongodb.org/manual/reference/operator/query/ne", "if your database is really fast and two documents are stored in the same millisecond.. do those documents have the same code_removed?", "i ended up solving this by starting mongod like this (hammered and ugly, yeah... but works for development environment): code_removed this enables profiling and sets the threshold for \"slow queries\" as 1ms, causing all queries to be logged as \"slow queries\" to the file: code_removed now i get continuous log outputs using the command: code_removed an example log: code_removed", "this is the only answer that i've seen that actually worked.", "that depends on your distribution. have a look at code_removed for the username \u2013 the group is likely to be identical. it usually is either code_removed or code_removed.", "$all is an operator for querying - querying is not an issue, the issue is returning so it's projection operators that we are discussing.", "i'd like to add to the op question: my comments model contains the user name and link to his avatar. what would be the best approach, considering a user can modify his name/avatar?", "watch out, i tested this with robomongo, and this resulted in type 1: double. had to use code_removed", "in you command prompt, first connect to mongodb using following command: code_removed you will be accessing db with code_removed. run the following command to drop the whole database: code_removed", "@drag0 you can use.some() as a replacement for.foreach(), which enables you to return false to break the loop.", "for the case that someone needs this in an aggregation pipeline instead of code_removed, this is what worked for me code_removed after adding the extra field you can go on with pipeline stages and have the information you miss", "yes there is something else at play. designers of such databases are using a data model (codd sense) that explicitly facilitates documenting the intended meaning of the components of their information models, but they neglect to do so. that is not the technology's fault, but its users'. my entire reply still stands, too. schemas facilitate documenting intended meaning (as well as the enforcement of declared consistency rules), no schema implies neither of both are possible.", "in case you need to find documents which contain null elements inside an array of sub-documents, i've found this query which works pretty well: code_removed this query is taken from this post: mongodb query array with null values it was a great find and it works much better than my own initial and wrong version (which turned out to work fine only for arrays with one element): code_removed", "15 min to insert 10,000 rows? that's a very anemic mysql database. in my experience, if such an operation approaches 1s in duration, my phone lights up with complaints.:)", "some further comparisons and code examples here: scottlogic.com/blog/2014/08/04/mongodb-vs-couchdb.html", "code_removed do not add the item to the given field if it already contains it, on the other hand code_removed will add the given object to field whether it exists or not. code_removed", "you just have to give access to your code_removed folder. type code_removed, replace code_removed by your username. you can find your username by typing code_removed.", "this is still true as of mongodb 3.4 april, 30th, 2017.", "code_removed", "using a filter works for me in c#. code_removed it may even use the index because i believe the methods are called after the return happens but i haven't tested this out yet. this also avoids a problem of code_removed that mongodb will think p.title.tolower() is a property and won't map properly.", "link no longer works:(", "seriously guys... why you don't say to enable the code_removed in code_removed??????", "it is tough if there is no data there to key off of. what are the _id field? are they mongodb object id's? if so, you could get the highest and lowest values: code_removed then if you assume the id's are uniformly distributed (but they aren't, but at least it's a start): code_removed", "thanks for this. i had to add permission to read + write to /data i don't understand what i did wrong but i have set my data folder to ~/applications/mongodb/data", "@yogeshmangaj thanks for the note, i updated the answer to be easily visible for everybody.", "is it me or the op gave this solution already and wanted better? oh noo, let's get free votes!", "use this function before your query: code_removed result: code_removed", "thank you so much. this is really weird i was using no quotes and double quotes it was not working. that's so silly.", "@aboozarrajabi in general you don't want to be concerned with how it is stored, as long as the initial input is correct. if it is code_removed right now in cet and you insert code_removed, then mongodb might represent it as code_removed. but when you read it back and display it in your application using local timezone settings (cet), it will read code_removed again.", "i want to execute mongo commands in shell script. i tried following way test.sh code_removed when i execute above script./test.sh then mongo connection established but next commands not executed how to execute other commands through sh script [test.sh]? please help me", "it works very good. thanks. it's should be marked as answer!", "by default, the mongo shell treats all numbers as floating-point values. so we need to explicitly specify what type of number we want to use e.g. numberint or numberlong. docs.mongodb.org/manual/core/shell-types", "nice answer - helped me out!", "@tyrsius, well not really. i'm saying that you shouldn't just render an html file. if you really really have to send it from within a route you could read the file with code_removed and then send the plain text. what i suggest doing is redirecting to the html file instead of trying to directly render it inside the route.", "you need to start code_removed with the code_removed option after setting up the user. from the mongodb site: run the database (mongod process) with the code_removed option to enable security. you must either have added a user to the admin db before starting the server with code_removed, or add the first user from the localhost interface. mongodb authentication", "yet the best approach. very useful thanks", "@aquaman what do you mean with single execution?", "the code_removed also blocks other operations. i discovered it empirically...", "i am curious that why not use timestamp, any advantages by using of the date obj?", "+1 for creating acc just for this:p wish i could give another + 1 just for using.save(), becaunse findoneandupate() makes us unable to use validators and pre, post, etc stuff. thanks, i'll check this too", "on mac there is mongohub. on windows you could try mongovue. also see do any visual tools exist for mongodb (for windows)? screenshot of mongohub:", "code_removed does not return any results eventhough data is there.", "the database does not do joins -- or automatic \"linking\" between documents. however you can do it yourself client side. if you need to do 2, that is ok, but if you had to do 2000, the number of client/server turnarounds would make the operation slow. in mongodb a common pattern is embedding. in relational when normalizing things get broken into parts. often in mongo these pieces end up being a single document, so no join is needed anyway. but when one is needed, one does it client-side. consider the classic order, order-lineitem example. one order and 8 line items are 9 rows in relational; in mongodb we would typically just model this as a single bson document which is an order with an array of embedded line items. so in that case, the join issue does not arise. however the order would have a customer which probably is a separate collection - the client could read the cust_id from the order document, and then go fetch it as needed separately. there are some videos and slides for schema design talks on the mongodb.org web site i belive.", "here how to do this on mongodb 3.0. i used this nice blog install mongodb. create data directories: code_removed start mongod instances code_removed configure the replica set: code_removed installing elasticsearch: code_removed installing and configuring the mongodb river: $ bin/plugin --install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb $ bin/plugin --install elasticsearch/elasticsearch-mapper-attachments create the \u201criver\u201d and the index: curl -xput ' -d '{ \"type\": \"mongodb\", \"mongodb\": { \"db\": \"mydb\", \"collection\": \"foo\" }, \"index\": { \"name\": \"name\", \"type\": \"random\" } }' test on browser:", "johnnyhk has the best answer. the code_removed selector is the shortest and cleanest imo. this will test for exactly \"false\" or \"non existent\". and can be indexed. code_removed an example with a use of an index. code_removed this should print code_removed", "i didn't want to depend on ejs for simply delivering an html file, so i simply wrote the tiny renderer myself: code_removed", "@kirillslatin this question has now been closed. you can read why questions like this are not appreciated in the gorilla vs shark blog post. while the not constructive reason referred to in this blog is no longer available, it's still very broad (enumerating all the differences in an answer is tedious), very time-based (features might be added that change this), and generally not a good fit for this site.", "first, you have to start mongod server then after in another terminal you have to start mongo shell. for starting, mongo server 1. if you path is default path (data/db) simple fired mongod in terminal 2. if your path is not data/db then you command like as follow: mongod --dbpath 'here your path comes'. for starting mongo shell, simply fired mongo in another terminal if you get this waiting for connections on port 27017, then your mongo successfully started. hope you can get my point", "i know that objectids contain the date they were created on. is there a way to query this aspect of the objectid?", "thanks for reminding it needed admin console", "the \"invalid argument\" means that the symbolic name for the mongo user is different on your system -- you're probably using a different package or install mechanism for installing mongodb. you should check your /etc/passwd and /etc/group files for the symbolic name (or uid/gid) of the mongo user code_removed. if that doesn't work, check the name by checking the owner of the directory code_removed. or to see the uid/gid do this: code_removed. in my case code_removed -- this means use 487:480 as the param", "try this: if your collection was 'example' code_removed refer this: update: the above link no longer covers '$unset'ing. nic cottrell's comment below is the way to go now. be sure to add code_removed if you want to remove this field from all of the documents in the collection; otherwise, it will only remove it from the first document it finds that matches. see this for updated documentation: example: code_removed", "i am using my new mac for the first time today. i am following the get started guide on the mongodb.org up until the step where one creates the /data/db directory. btw, i used the homebrew route. so i open a terminal, and i think i am at what you called the home directory, for when i do \"ls\", i see folders of desktop application movies music pictures documents and library. so i did a code_removed first, it says permission denied. i kept trying different things for half and hour and finally: code_removed worked. and when i \"ls\", a directory of data and nested in it a db folder do exist. then i fire up mongod and it complains about not finding data/db have i done something wrong? now i have done the code_removed and when i do a \"ls\" i do see the data dir and the db dir. inside the db dir though, there is absolutely nothing in it and when i now run mongod code_removed edit getting error message for code_removed thanks, everyone!", "thank you for this! finally i am able to call code_removed.:-)", "i don't know anything about mongodb, but from the couchdb faq: is couchdb ready for production? yes, see inthewild for a partial list of projects using couchdb. another good overview is couchdb case studies also, some links: re: current couchdb state? simpledb, couchdb and other \"new\" data stores - feedback", "i also faced the same issue in code_removed and code_removed. the above given solution will not work for latest version code_removed. they removed the code_removed method and added code_removed method. if you tried the above solution you may end up with the following error. code_removed to get rid of the error message. add the following line to your code_removed code_removed note: you have to install code_removed template engine code_removed example: code_removed note: the simplest solution is to use ejs template as view engine. there you can write raw html in *.ejs view files.", "i'm afraid i am using mongo 3.0.x:-(", "this is incredibly inefficient compared to the accepted answer; it circumvents all of the optimisation mongo puts in behind the scenes for a straight find as in the accepted.", "removing the mongodb.lock file was not the issue in my case. i did so and got an error about the port being in use: [initandlisten] listen(): bind() failed errno:98 address already in use for socket: 0.0.0.0:27017. i found another solution here: unable to start mongodb local server with instructions to kill the process: find out from netstat which process is running mongodb port (27017) code_removed output will be: tcp 0 0 0.0.0.0:27017 0.0.0.0:* listen 1412/mongod kill the appropriate process. code_removed (replace 1412 with your process id found in step 1) and i was able to successfully start mongodb again. i believe mine was still running from an improper shut down.", "the value of specified for the value of the field in the $unset statement (i.e. 1 here) does not impact the operation. $unset operator", "see following links couchdb vs mongodb mongodb, couchdb, mysql compare grid mongodb or couchdb - fit for production? update: i found great comparison of nosql databases. mongodb (3.2) written in: c++ main point: json document store license: agpl (drivers: apache) protocol: custom, binary (bson) master/slave replication (auto failover with replica sets) sharding built-in queries are javascript expressions run arbitrary javascript functions server-side has geospatial indexing and queries multiple storage engines with different performance characteristics performance over features document validation journaling powerful aggregation framework on 32bit systems, limited to ~2.5gb text search integrated gridfs to store big data + metadata (not actually an fs) data center aware best used: if you need dynamic queries. if you prefer to define indexes, not map/reduce functions. if you need good performance on a big db. if you wanted couchdb, but your data changes too much, filling up disks. for example: for most things that you would do with mysql or postgresql, but having predefined columns really holds you back. couchdb (1.2) written in: erlang main point: db consistency, ease of use license: apache protocol: bi-directional (!) replication, continuous or ad-hoc, with conflict detection, thus, master-master replication. (!) mvcc - write operations do not block reads previous versions of documents are available crash-only (reliable) design needs compacting from time to time views: embedded map/reduce formatting views: lists & shows server-side document validation possible authentication possible real-time updates via '_changes' (!) attachment handling thus, couchapps (standalone js apps) best used: for accumulating, occasionally changing data, on which pre-defined queries are to be run. places where versioning is important. for example: crm, cms systems. master-master replication is an especially interesting feature, allowing easy multi-site deployments.", "this is useful to execute something after code_removed has been loaded (docs.mongodb.org/manual/reference/program/mongo/\u2026)", "run cmd as administrator and run this command: sc.exe create mongodb binpath= \"d: mongodb bin mongod.exe --service --config=d: mongodb bin mongod.config\" displayname= \"mongodb 2.6 standard\" start= \"auto\"", "since mongo-connector now appears dead, my company decided to build a tool for using mongo change streams to output to elasticsearch. our initial results look promising. you can check it out at we're still early in development, and would welcome suggestions or contributions.", "i stumbled on your answer because code_removed wasn't working. why does code_removed make a difference, here?", "the data format used by mongodump from version 2.2 or later is incompatible with earlier versions of mongod. do not use recent versions of mongodump to back up older data stores.", "dude, you saved my day! this should be the final answer to this issue! thanks!", "it works on pw protected dbs you just need to pass the auth in the params", "from the system shell you can use code_removed (see derick's answer below) or code_removed to view what a process is actually doing. however, assuming you only have access to the code_removed shell (which your question title implies), then you can run the code_removed command. that output will give you all the arguments passed on the command line (argv) and the ones from the config file (parsed) and you can infer the ports code_removed is listening based on that information. here's an example: code_removed if you have not passed specific port options like the ones above, then the code_removed will be listening on 27017 and 28017 (http console) by default. note: there are a couple of other arguments that can alter ports without being explicit, see here:", "from a sql server background as well, i would appreciate mongodb taking a 'result set' (with selected returned fields) as input for a new query in one go, much like nested queries in sql", "because its google first answer... for version 3 code_removed", "@user3576887 i think there's journaling for avoiding data loss...", "complex transactions don't work in mongodb, but they do work in other nosql databases, like marklogic (i'm biased too since i run the developer community for marklogic).", "we use couchdb in production and have since just before the project went under the apache umbrella. we use it to store everything that we might otherwise use a dbms, plus all sorts of unstructured data. personally, i really like how you can just throw all sorts of data into it and use the views to cull what you don't need depending on the situation. the hardest part was moving away from the dbms mindset. we wrote our own migration utils when the storage format changed just to be safe, so that wasn't really a problem. we haven't had any negative experiences yet, but then again we haven't had the setup under any kind of huge load. i think things would work pretty well since we have two slave type servers that replicate from a single master server that gets all of the writes. i'm pretty sure that we don't have to do it that way for replication to work correctly, but it's how we set it up in the beginning and it stuck.", "@kbolino repeating: interpreters are handled by unix/linux and not mongo. also repeating: try it.", "@verystrongjoe it depends on complexity of the data and queries. you cannot generally say which one is the best.", "hopefully bj clark won't choose to use all those technologies in the same project. that would be a bit of a learning curve.", "using javascript, you can easily create a drop_bad.js script to drop your database: create drop_bad.js: code_removed than run 1 command in terminal to exectue the script using mongo shell: code_removed", "i get an error message when i try that code_removed?", "'you don't have to deal with duplicate rows for \"many\" sided joins' - no idea what you mean by this. can you clarify?", "if you get a code_removed in the code_removed line and aren't worried about the problem @skelly mentioned, the simplest solution is to just call the code_removed line first and then call the code_removed line. the code_removed should already printed on your screen so it'd be easy to recover, worst case, even if the insert fails, for simple documents.", "if you can't assure that you have many documents and an even distribution, this is a very bad solution, since it tends to give the same document often.", "working on mongo db: 3.6 (1) install mongodb (2) add bin to environment path variable (3) create code_removed (4) create code_removed (5) run below command on code_removed folder . mongod.exe --install --logpath c: data mongod.log --logappend --bind_ip 12 7.0.0.1 --dbpath c: data db (6) to start mongo db as service net start mongodb (7) finally run code_removed in command line to check mongo shell is open or not.", "the mongodb jira ticket is still alive: jira.mongodb.org/browse/server-533 go comment and vote if you want the feature.", "be careful with bind_ip. if you comment that out, it will allow remote connections to your database which is obviously a terrible idea unless you have security and auth setup. i believe mongodb has no users or password by default, so you need to be aware of that.", "gridfs is for documents > 16mb. not all binary data is this large. other than being able to surpass that limit, is there any other benefits to using gridfs instead of just the bindata type?", "it's widely mentioned that redis is \"blazing fast\" and mongodb is fast too. but, i'm having trouble finding actual numbers comparing the results of the two. given similar configurations, features and operations (and maybe showing how the factor changes with different configurations and operations), etc, is redis 10x faster?, 2x faster?, 5x faster? i'm only speaking of performance. i understand that mongodb is a different tool and has a richer feature set. this is not the \"is mongodb better than redis\" debate. i'm asking, by what margin does redis outperform mongodb? at this point, even cheap benchmarks are better than no benchmarks.", "i'm building an app using meteor.js and mongodb and i have a question about cursor.foreach(). i want to check some conditions in the beginning of each foreach iteration and then skip the element if i don't have to do the operation on it so i can save some time. here is my code: code_removed i know i could turn cursor to array using cursor.find().fetch() and then use regular for-loop to iterate over elements and use continue and break normally but i'm interested if there is something similiar to use in foreach().", "but isn't the whole advantage of mongo is not to have to use 2 queries but do everything in one?", "about the code_removed: code_removed link", "connect to mongodb using mongo-shell and run following command. code_removed e.g: code_removed", "here's the official page of admin uis. i have not really used any of them. but it looks like there is quite a bit of coverage there.", "i wonder how mongodb compare the \"_id\" field when doing query like the following: code_removed is it purely based on timestamp portion of the id?", "there is no service command on os x. if you have mongo installed via homebrew you can use code_removed. (via unix.stackexchange.com/questions/155715/\u2026)", "collection.find() returns a cursor. the cursor is a stream of data. so in js you can do something like this... jsfiddle.net/ro6efkdz", "just pushed mongoclikker to github. it's a dead simple mongodb viewer written in node.", "update - moved to robomongo", "new:true still don't work for me as well.", "with mongodb compass, you need to use the strict mode syntax, as such: code_removed (in mongodb compass, it's important that you use code_removed instead of code_removed)", "using map/reduce, you can certainly get a random record, just not necessarily very efficiently depending on the size of the resulting filtered collection you end up working with. i've tested this method with 50,000 documents (the filter reduces it to about 30,000), and it executes in approximately 400ms on an intel i3 with 16gb ram and a sata3 hdd... code_removed the map function simply creates an array of the id's of all documents that match the query. in my case i tested this with approximately 30,000 out of the 50,000 possible documents. the reduce function simply picks a random integer between 0 and the number of items (-1) in the array, and then returns that _id from the array. 400ms sounds like a long time, and it really is, if you had fifty million records instead of fifty thousand, this may increase the overhead to the point where it becomes unusable in multi-user situations. there is an open issue for mongodb to include this feature in the core... if this \"random\" selection was built into an index-lookup instead of collecting ids into an array and then selecting one, this would help incredibly. (go vote it up!)", "thank you gates vp for your answer. i was thinking of the two options you mentionned. but before doing such things, i wanted to know if a compact in place solution was available. thanks again.", "remember that when you restart the database by removing.lock files by force, the data might get corrupted. your server shouldn't be considered \"healthy\" if you restarted the server that way. to amend the situation, either run code_removed or code_removed in the mongo shell to bring your database back to \"healthy\" state.", "resolved. this problem could be solved by the below mentioned 4 steps 1) remove.lock file code_removed 2) repair the mongodb code_removed 3) start the mongod server code_removed 4) start the mongo client code_removed for more details take a look at", "in case int32->string, code_removed creates collection of strings with 0-index-item code_removed value. variant code_removed, described by simone works as desired - creates string value instead of int32", "why haven't you referenced jepsen tests for previous versions? for version 2.6.7 released in 2015 it claims that mongo\u2019s consistency model is broken by design. does it mean it was broken and is fixed now or you insist it was never broken?", "your question has at least code_removed votes for the like-operator tag. could i kindly request that you suggest sql-like as a synonym?", "i disagree that mongo is not good at this sort of thing. this sort if thing is what mongo excels at.", "to render html page in node try the following, code_removed you need to install code_removed module through code_removed like: code_removed", "after you create new user, please don't forget to code_removed code_removed permission to the user. you can try the code_removed", "working on mongo db: 3.6 (1) install mongodb (2) add bin to environment path variable (3) create code_removed (4) create code_removed (5) run below command on code_removed folder . mongod.exe --install --logpath c: data mongod.log --logappend --bind_ip 12 7.0.0.1 --dbpath c: data db (6) to start mongo db as service net start mongodb (7) finally run code_removed in command line to check mongo shell is open or not.", "regex works, but they scan the whole database applying regex and don't uses indexes. what is highly inneficient", "add the following lines to your code replace \"jade\" with \"ejs\" & \"x.y.z\"(version) with \"*\" in package.json file code_removed then in your app.js file add following code: code_removed code_removed and remember keep all.html files in views folder cheers:)", "@scaryguy, \"server side\" would be in the mongodb application while \"client side\" is your application code. your application connects as a client to the mongodb server. do not confuse this with machines; both processes might run on the same machine. client and server are just describing two different roles in inter-process communication.", "hi nanhe kumnar what is initial path in terminal. is we should go to cd /usr/local/opt/mongodb/ folder or another, i'm facing following problem vijayvir-singh:~ vijayvir$ sudo rm /var/lib/mongodb/mongod.lock rm: /var/lib/mongodb/mongod.lock: no such file or directory vijayvir-singh:~ vijayvir$", "watch out, i tested this with robomongo, and this resulted in type 1: double. had to use code_removed", "what happened?!", "it's mongoexport for export", "sendfile is not cache in production mode so this is not a good solution.", "op wanted to copy a collection -- not the whole db.", "edit this to just use code_removed", "yes it is. you don't need.tolowercase(). i have removed it from the answer.", "i didn't have to convert to objectid using mongoose 4.5.9.", "i'm really impressed with how effective this is and also how 'out of the box' you were thinking to find this solution. this works on 2.6, as well.", "we use mongodb and solr together and they perform well. you can find my blog post here where i described how we use this technologies together. here's an excerpt: [...] however we observe that query performance of solr decreases when index size increases. we realized that the best solution is to use both solr and mongo db together. then, we integrate solr with mongodb by storing contents into the mongodb and creating index using solr for full-text search. we only store the unique id for each document in solr index and retrieve actual content from mongodb after searching on solr. getting documents from mongodb is faster than solr because there is no analyzers, scoring etc. [...]", "this is really an anti-answer. most meaning, as most people understand it, arises from more than just relational concepts. in fact it is harder for most application developers to discern meaning out of a highly normalized schema than it is for a document store.", "i am looking to get a random record from a huge (100 million record) code_removed. what is the fastest and most efficient way to do so? the data is already there and there are no field in which i can generate a random number and obtain a random row. any suggestions?", "many of these answers are out of date. using express 3.0.0 and 3.1.0, the following works: code_removed see the comments below for alternative syntax and caveats for express 3.4+: code_removed then you can do something like: code_removed this assumes you have your views in the code_removed subfolder, and that you have installed the code_removed node module. if not, run the following on a node console: code_removed", "the 2 main reason why you might want to prefer mongo are flexibility in schema design (json type document store). scalability - just add up nodes and it can scale horizontally quite well. it is suitable for big data applications. rdbms is not good for big data.", "here is array structure code_removed here i only know the mongo id(code_removed) and phone number(code_removed) and i need to remove that whole corresponding array element from document. i.e zero indexed element in phone array is matched with phone number and need to remove the corresponding array element. code_removed i tried with following update method code_removed but it removes code_removed from inner array object, not zero indexed element in phone array. tried with code_removed also without a success. how to remove the array element in mongodb?", "is item #3, \"and take advantage of only one index\" still valid today? i'm just getting into mongodb now and it seems from what i have read/viewed so far that it can support multiple indexes?", "off-topic, this is the strangest nodejs file i have ever seen.", "what are the 3rd and 4th parameters in the update method? and why?", "reading is good:)", "this works on linux too. i've created a directory called \"data\" next to mondod script and run it like this:./mongod --dbpath=data", "i'm actually in the process of converting a mongodb database where dates are stored as proper date() types to instead store them as strings in the form code_removed. why, considering that every other answerer says that this is a horrible idea? simply put, because of the neverending pain i've been suffering trying to work with dates in javascript, which has no (real) concept of timezones. i had been storing utc dates in mongodb, i.e. a date() object with my desired date and the time set as midnight utc, but it's unexpectedly complicated and error-prone to get a user-submitted date correctly converted to that from whatever timezone they happen to be in. i've been struggling to get my javascript \"whatever local timezone to utc\" code to work (and yes, i'm aware of sugar.js and moment.js) and i've decided that simple strings like the good old mysql standard code_removed is the way to go, and i'll parse into date() objects as needed at runtime on the client side. incidentally, i'm also trying to sync this mongodb database with a filemaker database, which also has no concept of timezones. for me the simplicity of simply not storing time data, especially when it's meaningless like utc midnight, helps ensure less-buggy code even if i have to parse to and from the string dates now and then.", "i guess admins just look at the question if it contains any piece of code and not at the kind of information being sought.. btw you can always vote to reopen the question.", "oops, i want to query the created_at and find all between two dates.", "this does in fact relate to the long standing issue at where there are in fact a number of challenges to a clear syntax that supports \"all cases\" where mutiple array matches are found. there are in fact methods already in place that \"aid\" in solutions to this problem, such as bulk operations which have been implemented after this original post. it is still not possible to update more than a single matched array element in a single update statement, so even with a \"multi\" update all you will ever be able to update is just one mathed element in the array for each document in that single statement. the best possible solution at present is to find and loop all matched documents and process bulk updates which will at least allow many operations to be sent in a single request with a singular response. you can optionally use code_removed to reduce the array content returned in the search result to just those that match the conditions for the update selection: code_removed the code_removed portion there will work when there is a \"unique\" identifier for the array or all content for each element forms a \"unique\" element itself. this is due to the \"set\" operator in code_removed used to filter any code_removed values returned from the code_removed operation used to process the array for matches. if your array content does not have unique elements you can try an alternate approach with code_removed: code_removed where it's limitation is that if \"handled\" was in fact a field meant to be present at other document levels then you are likely going to get unexepected results, but is fine where that field appears only in one document position and is an equality match. future releases ( post 3.1 mongodb ) as of writing will have a code_removed operation that is simpler: code_removed and all releases that support code_removed can use the following approach with code_removed, but the usage of that operator makes it the least efficient approach due to the array expansion in the pipeline: code_removed in all cases where the mongodb version supports a \"cursor\" from aggregate output, then this is just a matter of choosing an approach and iterating the results with the same block of code shown to process the bulk update statements. bulk operations and \"cursors\" from aggregate output are introduced in the same version ( mongodb 2.6 ) and therefore usually work hand in hand for processing. in even earlier versions then it is probably best to just use code_removed to return the cursor, and filter out the execution of statements to just the number of times the array element is matched for the code_removed iterations: code_removed if you are aboslutely determined to do \"multi\" updates or deem that to be ultimately more efficient than processing multiple updates for each matched document, then you can always determine the maximum number of possible array matches and just execute a \"multi\" update that many times, until basically there are no more documents to update. a valid approach for mongodb 2.4 and 2.2 versions could also use code_removed to find this value: code_removed whatever the case, there are certain things you do not want to do within the update: do not \"one shot\" update the array: where if you think it might be more efficient to update the whole array content in code and then just code_removed the whole array in each document. this might seem faster to process, but there is no guarantee that the array content has not changed since it was read and the update is performed. though code_removed is still an atomic operator, it will only update the array with what it \"thinks\" is the correct data, and thus is likely to overwrite any changes occurring between read and write. do not calculate index values to update: where similar to the \"one shot\" approach you just work out that position code_removed and position code_removed ( and so on ) are the elements to update and code these in with and eventual statement like: code_removed again the problem here is the \"presumption\" that those index values found when the document was read are the same index values in th array at the time of update. if new items are added to the array in a way that changes the order then those positions are not longer valid and the wrong items are in fact updated. so until there is a reasonable syntax determined for allowing multiple matched array elements to be processed in single update statement then the basic approach is to either update each matched array element in an indvidual statement ( ideally in bulk ) or essentially work out the maximum array elements to update or keep updating until no more modified results are returned. at any rate, you should \"always\" be processing positional code_removed updates on the matched array element, even if that is only updating one element per statement. bulk operations are in fact the \"generalized\" solution to processing any operations that work out to be \"multiple operations\", and since there are more applications for this than merely updating mutiple array elements with the same value, then it has of course been implemented already, and it is presently the best approach to solve this problem.", "i'm using mongoose 4.6.3 and all i had to do was add _id: false in the schema, no need to make a subschema. code_removed", "why isn't this the accepted answer? elegant one line command vs. a pdf, video and fatty paragraph. hmm..", "hey, thanks for the heads-up! i'll update the answer to reflect it", "there's a couple of mis-conceptions in your answer. while mongodb isn't vulnerable to sql injection, it is susceptible to injection more generally. you can specify arbitrary javascript in the $where clause of a query. also, unlike a lot of the other nosql option, mongodb can actually do some pretty complex queries.", "why the book code_removed said that it defaulted to code_removed? i don't know why.", "no that's not why it is the way it is. javascript is not used in any part of the mongodb storage engine. arrays remain ordered exactly because that's how it's being stored by mongodb. array ordering is part of the query specification and drivers, javascript or otherwise, follow that spec and present the data as it exists in the database.", "expressjs.com/en/starter/basic-routing.html", "@mark i know this probably isn't very satisfying, but with a little trickery and tom-foolery (which already feels bad to my gut), you can have indexes that satisfy both. you have your existing sparse, unique index. then make another index that's not unique or sparse, but add another field to the index (after the field in question). then you can use query hints to force the optimizer to pick the correct index (when i tested this, i needed to force the hint on the sparse, unique index to find exact matches/ranges, but didn't need the hint for finding {$exists: false}).", "as is also mentioned below, in another answer (but i missed it, since i only looked at the top voted ones) i needed to add single quotes around username and password, before i could login", "running the -r mongodb:mongodb version of this solution i got an error saying 'chown: mongodb: illegal group name'. running the 'id -u' version worked great for me, though. thanks to everyone who has posted about this!", "yeah i had to come here for something as simple as code_removed because i when i went to the docs i simply could not find the code_removed command anywhere. the 'docs' can be pretty frustrating at times.", "@mauricio-scheffer mentioned solr 4 - for those interested in that, lucidworks is describing solr 4 as \"the nosql search server\" and there's a video at where they go into detail on the nosql(ish) features. (the -ish is for their version of schemaless actually being a dynamic schema.)", "did you try code_removed before code_removed?", "to clarify the comment by @zhaokongsheng, if the code_removed collection already exists \"... the code_removed stage atomically replaces the existing collection with the new results collection.\" code_removed does not append to the existing collection. see docs.mongodb.com/manual/reference/operator/aggregation/out", "first, un-comment the line that starts with code_removed in your mongod configuration file (default path code_removed). this will enable authentication for mongodb. then, restart mongodb: code_removed", "on a mac, i had to do the following: code_removed because there was also a file inside code_removed which mongo also needed access", "that ticket has been open for a very long time. i've added my less-than-important vote to the already long list.", "very helpful. i work in gis and so being able to combine full-text with spatial search in this way is very intriguing. we already use mongodb and postgres, and i have been thinking about solr for a while.", "code_removed", "sure, the clarification is valid, thanks.", "we can also use db.collections", "looks like you are right @tomkrones", "if you are using mongoskin like i do: change code_removed to code_removed", "for anyone using the node.js driver instead of mongoose, you'll want to use code_removed instead of code_removed.", "as of 4.0, mongodb will have multi-document acid transactions. the plan is to enable those in replica set deployments first, followed by the sharded clusters. transactions in mongodb will feel just like transactions developers are familiar with from relational databases - they'll be multi-statement, with similar semantics and syntax (like code_removed and code_removed). importantly, the changes to mongodb that enable transactions do not impact performance for workloads that do not require them. for more details see here.", "this won't solve your problem but the mongodb shell has a code_removed method that copies a collection into another one in the same database: code_removed it also translates from bson to json, so code_removed/code_removed are the best way to go, as others have said.", "one of the big issues in application or human error data corruption is that the offending write to the primary will immediately be replicated to the secondary. this is one of the reasons that users take advantage of \"slavedelay\" - an option to run one of your secondary nodes with a fixed time delay (of course that only helps you if you discover the error or bug during the time period that's shorter than the delay on that secondary). in case you don't have such a set-up, you have to rely on a backup to recreate the state of the records you need to restore to their pre-bug state. perform all the operations on a separate stand-alone copy of your data - only after verifying that everything was properly recreated should you then move the corrected data into your production system. what is required to be able to do this is a recent copy of the backup (let's say the backup is x hours old) and the oplog on your cluster must hold more than x hours worth of data. i didn't specify which node's oplog because (a) every member of the replica set has the same contents in the oplog and (b) it is possible that your oplog size is different on different node members, in which case you want to check the \"largest\" one. so let's say your most recent backup is 52 hours old, but luckily you have an oplog that holds 75 hours worth of data (yay). you already realized that all of your nodes (primary and secondaries) have the \"bad\" data, so what you would do is restore this most recent backup into a new mongod. this is where you will restore these records to what they were right before the offending update - and then you can just move them into the current primary from where they will get replicated to all the secondaries. while restoring your backup, create a mongodump of your oplog collection via this command: code_removed move the oplog to its own directory renaming it to oplog.bson: code_removed now you need to find the \"offending\" operation. you can dump out the oplog to human readable form, using the code_removed command on oplogr/oplog.bson file (and then use grep or what-not to find the \"bad\" update). alternatively you can query against the original oplog in the replica set via code_removed and code_removed commands in the shell. your goal is to find this entry and note its code_removed field. it might look like this: code_removed note that the code_removed command has two options, one called code_removed and the other called code_removed. you will now replay this oplog on the restored stand-alone server but you will stop before this offending update operation. the command would be (host and port are where your newly restored backup is): code_removed this will restore each operation from the oplog.bson file in oplogr directory stopping right before the entry with ts value timestamp(1361497305, 2789). recall that the reason you were doing this on a separate instance is so you can verify the restore and replay created correct data - once you have verified it then you can write the restored records to the appropriate place in the real primary (and allow replication propagate the corrected records to the secondaries).", "please take following steps: as other friends mentioned, you should make a directory first for your database data to be stored. this folder could be something like: c: mongo-data from command line navigate to where you have installed mongodb and where mongod.exe resides. in my case the full path is: c: program files mongodb server 3.4 bin from here run mongod.exe and pass it the path to the folder you created in step one using the flag --dbpath as follows: mongod.exe --dbpath \"c: mongo-data\" please note: if you are on windows it is necessary to use double-quotes (\"\") in the above to run properly. in this way you will get something like the following: code_removed if you use single quotes (' ') on windows, you will get: code_removed hope it helps to resolve the issue.", "there is no service command on os x. if you have mongo installed via homebrew you can use code_removed. (via unix.stackexchange.com/questions/155715/\u2026)", "you can do it with the following code. code_removed", "for mac users: run ls -ld /data/db/ output should be something like drwrx-xr-x 20 singh wheel 680 21 jul 05:49 /data/db/ where singh is the owner and wheel is the group it belongs to. run sudo chown -r singh:wheel /data/db run mongod", "how can i include the index to the new collection with this method?", "this method only works if you want to repair your data files without preserving the original files to find where you dbpath resides- vim /etc/mongodb.conf check for option dbpath= (i have dbpath=/var/lib/mongodb) default: /data/db/ typical locations include: /srv/mongodb, /var/lib/mongodb or /opt/mongodb. replace the /var/lib/mongodb with your dbpath code_removed (make sure that you leave you terminal running in which you have run above lines, dont press 'ctrl+c' or quit it.) type the command to start mongo now in another window. hope this works for you! for those who want to repair your data files while preserving the original files mongo recover", "sorry bad example:(. really its geospatial data. so i will have an x,y for each document. users can easily just add/drop a pin on map for their current location and attach some metadata about that location. i.e. pics/video, title, weather, etc. so imagine a bunch of people at the olympics adding new data. people/locations same difference. question is since each 'event' might have millions of docs should each separate event live in its own collection, or throw all events docs into the same collection? one collection with 10 million docs, or 10 collections that each have ~1 million docs.", "note that the op's collection is not an array, it's a mongo db cursor object, which doesn't seem to have a code_removed method, so you'd have to call its code_removed method before you could code_removed", "just wondering, what is the /var/lib/mongodb/mongod.lock and what went wrong with it?", "yes, correct, the root directory '/' is the top-level directory.", "thanks for the precisions. note that, as i stated, it is the mongodb site itself that emitted restrictions on relational queries. unless i misunderstood something else...", "how do i perform the sql join equivalent in mongodb? for example say you have two collections (users and comments) and i want to pull all the comments with pid=444 along with the user info for each. code_removed is there a way to pull all the comments with a certain field (eg....find({pid:444}) ) and the user information associated with each comment in one go? at the moment, i am first getting the comments which match my criteria, then figuring out all the uid's in that result set, getting the user objects, and merging them with the comment's results. seems like i am doing it wrong.", "the question already specifies that op understands that findandmodify returns the document being updated, but update does not. they are asking how that is achieved (plus why such two mechanisms were provided).", "thanks @jonpage, i was wondering why my collection of person objects was named as people. the link you provided is a good reference. i think this method of setting a custom collection name when creating a schema is better than the other method of defining a collection name when creating the model.", "still works in mongodb version 2.6.1. further, was able to update another field at the same time: code_removed", "mongovue is the best i found till now, it has great features like database or collection copy and text mode viewing for records which is extremely useful", "this should be the accepted answer. for a better flattenobject function, see gist.github.com/penguinboy/762197", "here is some code that will manage your mongodb connections. code_removed when you start the server, call code_removed code_removed then in any other module you can do the following: code_removed this is based on mongodb documentation. take a look at it.", "yeah, the best way is to convert the object notation to a flat key-value string representation, as mentioned in this comment: i wanted to highlight an alternative method using this npm library: which lets you manipulate different objects using dot notation. i used this pattern to programatically create a nested object property when accepting the key-value as a function variable, as follows: code_removed this pattern lets me use nested as well as single-level properties interchangeably, and insert them cleanly into mongo. if you need to play around with js objects beyond just mongo, especially on the client-side but have consistency when working with mongo, this library gives you more options than the earlier mentioned code_removed npm module. p.s i originally wanted to just mention this as a comment but apparently my s/o rep isn't high enough to post a comment. so, not trying to muscle in on szybkisasza's comment, just wanted to highlight providing an alternative module.", "thanks. when developing on mac with brew, this fixes the issue. no need for more security if you are just using test data in mongodb. @markuswmahlberg on os x, the user running mongod is your_user_name if you simply start it with \"mongod &\".", "@joachimisaksson thanks, but i wonder do i really need to increase them?", "a little improvement to the @689 response code_removed", "if you want valid json output, use json.stringify() instead of printjson()", "i would abuse the connect function in mongo cli mongo doc. so that means you can start one or more connection. if you want to copy customer collection from test to test2 in same server. first you start mongo shell code_removed do a normal find and copy the first 20 record to test2. code_removed or filter by some criteria code_removed just change the localhost to ip or hostname to connect to remote server. i use this to copy test data to a test database for testing.", "how about code_removed", "the last answer on this question is probably the most relevant, since mongodb 3.2+ implemented a join solution called $lookup. thought i would push it here because maybe not everyone will read to the bottom. stackoverflow.com/a/33511166/2593330", "one needs to be careful here, though. this only works if the selector of the findandmodify/findoneandupdate/updateone uniquely identifies one document by _id. otherwise the upsert is split up on the server into a query and an update/insert. the update will still be atomic. but the query and the update together will not be executed atomically.", "user3576887 reading is so much faster for sure, because mysql can relate tables in a single query.", "i want to execute mongo commands in shell script. i tried following way test.sh code_removed when i execute above script./test.sh then mongo connection established but next commands not executed how to execute other commands through sh script [test.sh]? please help me", "use $count operator to get the total count of aggregation result query: code_removed result: code_removed", "on my ubuntu server, just run: code_removed", "this is kind of a specific case, but in case anyone gets here with my problem: in mongohq, it'll show you a field called \"password\", but it's actually just the hash of the password. you'll have to add a new user and store the password elsewhere (because mongohq won't show it to you).", "that's: sudo chown -r code_removed /data/db for the uninitiated. :)", "to store this unstructured data as you said, mongodb is best suitable to store unstructured data. and this can organize your data into document format. these rdbms altenatives called nosql data stores (mongodb, couchdb, voldemort) are very useful for applications that scales massively and require faster data access from these big data stores. and the implementation of these databases are simpler than the regular rdbms. since these are simple key-valued or document style binary objects directly serialized into disk. these data stores don't enforce the acid properties, and any schemas. this doesn't provide any transaction abilities. so this can scale big and we can achieve faster access (both read and write). but in contrast, rdbm enforces acid and schemas on datas. if you wanted to work with structured data you can go ahead with rdbm. i would choose mysql for creating forums for this kind of stuff. because this is not going to scale big. and this is a very simple (common) application which has structured relations among the data.", "it looks like the option to use mongoexport for all collections is a planned featured that hasn't been scheduled yet: server-201.. so mongodump is currently your best option for exporting a complete database. it wouldn't be too difficult to write the equivalent of mongoexport using one of the mongodb client drivers.", "\"for case insensitive regular expression queries, these queries generally cannot use indexes effectively.\" -> docs.mongodb.com/manual/reference/operator/query/regex", "i'm a little confused about this - is there any way to specify that you want only certain documents in the \"from\" collection, or does it automatically join all in the db at once?", "great point -- thanks. i know this caveat holds true in mongodb version 1.8.x and before; but i thought queries with $exists field constraints can now make use of indexes in version 2.0...?", "i did, it's got its own paragraph in fact, and has since i wrote it......i also mention it in my profile, so not sure what else i can do to make it clear", "@andrefigueiredo in real world you would batch if you had all the data, but for profiling purposes one at a time better simulates multiple users making smaller inserts. but, engine and indexes make a huge difference.", "this could be a factor of how the distribution package was built. i installed my copy using code_removed. how did you install your copy? are you still getting the error about dbpath not existing?", "if you see the details of the error, there is a line that says that the directory code_removed was not found. use: code_removed", "mongodb v3.4 you need to do the following to create a secure database: make sure the user starting the process has permissions and that the directories exist (code_removed in this case). 1) start mongodb without access control. code_removed 2) connect to the instance. code_removed 3) create the user administrator (in the admin authentication database). code_removed 4) re-start the mongodb instance with access control. code_removed 5) connect and authenticate as the user administrator. code_removed 6) create additional users as needed for your deployment (e.g. in the test authentication database). code_removed 7) connect and authenticate as mytester. code_removed i basically just explained the short version of the official docs here:", "yep once i was storing the dates correct the cookbook examples worked as expected.", "try either killall -15 mongod/ killall mongod even after this if this doesnt work then remove the db storage folder by typing the following commands sudo rm -rf /data/db sudo mkdir /data/db sudo chmod 777 /data/db", "bytes of course. unless you pass in a scale as optional argument.", "awesome that's exactly what i needed, thanks!", "no, that's mongodb driver direct. however it might have changed since i posted it.", "to get last 60 days old documents in mongo collection i used below query in shell. code_removed", "not using $set might be a bad habit to get into if you're going to be using the native driver from time to time though.", "why isn't this the accepted answer? elegant one line command vs. a pdf, video and fatty paragraph. hmm..", "the question is how to drop all databases, not an individual one", "ohhhh, that makes sense then. haha... hence the term \"working data.\" this whole time i thought you had to modify the collection somehow to put certain records before others. thanks man!", "@ayan sorry, i'm no longer active in node.js.", "i would add regex i code_removed", "given how infrequently people's names change, it seems that optimizing performance for that extremely rare occurrence is unlikely to be right. optimize for the common case - extra lookup is saved on every single query.", "you examples doesn't make you intentions clear. good luck!", "this appears to be broken for me, it still returns the old document with new: true.", "the answer does well to summarize approaches and i know it's formed addressing the specific update request mentioned in the question, however one small niggle is too many people are jumping to the aggregation method. this really needs a bold disclaimer that this in fact 1. creates a new collection rather than updating the existing one. 2. needs to be avoided when \"casting types\". i.e the common mistake of storing \"strings\" instead of code_removed and needing to convert. i for one would be very happy if this was prominent, and not just a little comment tacked on the end.", "older versions such as 2.4 would use db.adduser", "be careful, mongodb won't use indexes if $size is involved link. would be better to include {$ne:[]} and possibly {$ne:null}.", "@duck5auce please update this answer, it is out dated. river has been deprecated", "this gist can be time saving for devleopment machine setups gist.github.com/serdarb/5102848", "it's a moving target that is getting better over time. i'm not sure what you would like me to do......a chronological history of every bug fixed, problem found, edge case identified? of course there were problems, the progress is clear. as for 2.6, it has been eol since april 2016, why would i reference that in an update almost a year after that - if you are having issues with 2.6.x then the answer is: upgrade, and the sooner the better", "if you want to clone the row, but without explicitely typing a new id, just delete the \"_id\" property before doing the insert command: delete orig._id", "sure, the clarification is valid, thanks.", "this selects a document randomly, but if you do it more than once, the lookups are not independent. you are more likely to get the same document twice in a row than random chance would dictate.", "how do you apply limit to the results set? results is now a nested array", "@discipol if you want to do a set of atomic operations, you should first lock the document, then modify it, and at the end release it. this will require more queries, but you can optimize for the best case scenario and do only 1-2 queries most of the times. see: docs.mongodb.org/manual/tutorial/perform-two-phase-commits", "after attending devoxx 2011 and attending a presentation from 10gen, i have written a little blog comparing mongodb to rdbms databases. mongodb is one of the popular nosql dbs. please see below:", "i use two levels of nested sub-schema collections. in other words, i have a subschema collection similar to your example. within that, i use another different sub-schema collection. i want only the first level sub-schema model instances to not use ids, but the second level (nested) sub-schema model instances need to have ids. when i use your solution, that is, specifying code_removed, both levels of sub-schema are without ids. any way to work around this behavior?", "my one and only issue with so is how aggressive we are in closing questions. take this one - i found it via a google search, it's highly upvoted, and has an excellent and well-maintained accepted answer that was extremely helpful to me, a developer. why close it then? this question has not proven to solicit debates, argument, polling or extended discussion. if it is closed, we reduce the body of knowledge that programmers have access to, which is the opposite of the spirit and intent of so, imho.", "thank you so much. this is really weird i was using no quotes and double quotes it was not working. that's so silly.", "if you are using mongoose 2.0.0, pass the collectionname as the third argument code_removed", "thank you. i ran code_removed and it upgraded my databases. it was necessary. but the service is still not starting.", "i am not familiar with mongoexport but it may have something to do with your usage of single and double quotes.", "while you have not specified the exact issues with licensing, there is nothing wrong with mongodb licensing mongodb.org/about/licensing it uses the agpl license which may be the cause of concerns in your legald department, but they state that any db client is separate work. \"we promise that your client application which uses the database is a separate work. to facilitate this, the mongodb.org supported drivers (the part you link with your application) are released under apache license, which is copyleft free.\"", "it's important to specify mysql and mongodb versions.", "alternatively, you could use the standard mongo findandupdate method, and within the callback, fire an eventemitter event (in node) when the callback is run. any other parts of the application or architecture listening to this event will be notified of the update, and any relevant data sent there also. this is a really simple way to achieve notifications from mongo.", "@filipbartuzi there is an example in the documentation page, you'll have to add a sort operation to the pipeline, as code_removed", "@leventedobson thanks for the good tip, i will do as you suggest!", "\"working set\" is basically the amount of data and indexes that will be active/in use by your system. so for example, suppose you have 1 year's worth of data. for simplicity, each month relates to 1gb of data giving 12gb in total, and to cover each month's worth of data you have 1gb worth of indexes again totalling 12gb for the year. if you are always accessing the last 12 month's worth of data, then your working set is: 12gb (data) + 12gb (indexes) = 24gb. however, if you actually only access the last 3 month's worth of data, then your working set is: 3gb (data) + 3gb (indexes) = 6gb. in this scenario, if you had 8gb ram and then you started regularly accessing the past 6 month's worth of data, then your working set would start to exceed past your available ram and have a performance impact. but generally, if you have enough ram to cover the amount of data/indexes you expect to be frequently accessing then you will be fine. edit: response to question in comments i'm not sure i quite follow, but i'll have a go at answering. firstly, the calculation for working set is a \"ball park figure\". secondly, if you have a (e.g.) 1gb index on user_id, then only the portion of that index that is commonly accessed needs to be in ram (e.g. suppose 50% of users are inactive, then 0.5gb of the index will be more frequently required/needed in ram). in general, the more ram you have, the better especially as working set is likely to grow over time due to increased usage. this is where sharding comes in - split the data over multiple nodes and you can cost effectively scale out. your working set is then divided over multiple machines, meaning the more can be kept in ram. need more ram? add another machine to shard on to.", "plus for caching mongodb has auto-expire capability of documents, so you don't need to manage cleanup or worry about data being expunged due to lack of ram. we implemented a drop-in replacement for memcached using mongo when we needed to store more than 1mb potentially and didn't want low memory prunes to be a potential issue.", "@eduardomelo you are right! i modified the answer", "sweet jesus, so mongo's argument is \"16 mb should be enough for anybody\"? its not like that has ever proven to be incorrect in the past.", "setting user name and password in a file does not look very secure.", "i am looking to get a random record from a huge (100 million record) code_removed. what is the fastest and most efficient way to do so? the data is already there and there are no field in which i can generate a random number and obtain a random row. any suggestions?", "apart from the options suggested by other people: code_removed there is also another way which can be really handy if you want to know how each of the collections was created (for example it is a capped collection with a particular size) code_removed", "@asyakamsky it sounds like it could still have been given a meaningful answer by you though. if there are examples of cases where it is not faster and examples of where it is, it would probably allow him to infer the specific answer within his own ambiguous context but also lead to a better understanding of the workings of both operations.", "if you can't assure that you have many documents and an even distribution, this is a very bad solution, since it tends to give the same document often.", "@msangel those guys seem to be criticising the logic, not the coding style.", "@gank if you're using the mongodb native driver for node the syntax would be more like code_removed. see the docs", "yep, i think this is valid.", "this fixed my issue: go to terminal shell and type code_removed. then type code_removed. then type: code_removed also try: code_removed quick sample: code_removed", "i had similar issue, the actual reason was that there was mongod session running already from my previous attempt. i ran code_removed and everything else ran just as expected. code_removed command would send a term signal to all processes with a real uid. so this kills all the running instances of mongod so that you could start your own.", "yes, it is very unlikely since it is a guid. you should not accidentally be able to hit a collision very easily.", "try code_removed in a call to code_removed. like this: code_removed and, as vikneshwar commented, if you want to remove one field from all (or multiple) documents you can use code_removed like this: code_removed", "but how do i know which mongo shell to start? any specific command to identify the process?", "you can use aggregation framework to resolve your issue code_removed it shoul be noted, that indexes from oldcollection will not copied in newcollection.", "this link can be helpfull", "you cannot refer to the document itself in an update (yet). you'll need to iterate through the documents and update each document using a function. see this answer for an example, or this one for server-side code_removed.", "this is good to know, but not my question:)", "i usually use scripts when interacting with the shell, so i wrote a basic logging object that i \"load(script)\" into the shell, and then use the logging object to call logging levels (debug,info,warn,error). the logger object does use 'print' and 'printjson' at it's core. also, it contains a basic sprintf, padding, record formatting, etc. if you are going to be doing any signifigant amount of script work with mongodb, i recommend this route. debugging mongodb scripts feels like being back at intro to programming and debugging with print statements. configurable logging makes this a little better, but i really miss being able to step through the code.", "would the date initialization use slashes instead of dashes? like so: code_removed", "the code_removed command shows authenticated users (if any, among some other data): code_removed which results in something like bellow: code_removed so if you are connecting from the shell, this is basically the current user you can also add the user name to prompt by overriding the code_removed function in code_removed file, under os user home directory. roughly: code_removed an example: code_removed", "you're not providing update data... update: edited.", "what are they using it for? or how are they using it?", "this works nice, it's fast, works with multiple documents and doesn't require populating code_removed field, which will eventually populate itself: add index to.rand field on your collection use find and refresh, something like: code_removed ps. how to find random records in mongodb question is marked as duplicate of this question. the difference is that this question asks explicitly about single record as the other one explicitly about getting random documents.", "this is same as the actual question with the only difference being the third argument in code_removed method", "this answer is wrong because code_removed checks for the key code_removed and does not consider it's value (code_removed) and will return a document with code_removed.", "i have tried to puzzle out an answer to this question for many months while learning pandas. i use sas for my day-to-day work and it is great for it's out-of-core support. however, sas is horrible as a piece of software for numerous other reasons. one day i hope to replace my use of sas with python and pandas, but i currently lack an out-of-core workflow for large datasets. i'm not talking about \"big data\" that requires a distributed network, but rather files too large to fit in memory but small enough to fit on a hard-drive. my first thought is to use code_removed to hold large datasets on disk and pull only the pieces i need into dataframes for analysis. others have mentioned mongodb as an easier to use alternative. my question is this: what are some best-practice workflows for accomplishing the following: loading flat files into a permanent, on-disk database structure querying that database to retrieve data to feed into a pandas data structure updating the database after manipulating pieces in pandas real-world examples would be much appreciated, especially from anyone who uses pandas on \"large data\". edit -- an example of how i would like this to work: iteratively import a large flat-file and store it in a permanent, on-disk database structure. these files are typically too large to fit in memory. in order to use pandas, i would like to read subsets of this data (usually just a few columns at a time) that can fit in memory. i would create new columns by performing various operations on the selected columns. i would then have to append these new columns into the database structure. i am trying to find a best-practice way of performing these steps. reading links about pandas and pytables it seems that appending a new column could be a problem. edit -- responding to jeff's questions specifically: i am building consumer credit risk models. the kinds of data include phone, ssn and address characteristics; property values; derogatory information like criminal records, bankruptcies, etc... the datasets i use every day have nearly 1,000 to 2,000 fields on average of mixed data types: continuous, nominal and ordinal variables of both numeric and character data. i rarely append rows, but i do perform many operations that create new columns. typical operations involve combining several columns using conditional logic into a new, compound column. for example, code_removed. the result of these operations is a new column for every record in my dataset. finally, i would like to append these new columns into the on-disk data structure. i would repeat step 2, exploring the data with crosstabs and descriptive statistics trying to find interesting, intuitive relationships to model. a typical project file is usually about 1gb. files are organized into such a manner where a row consists of a record of consumer data. each row has the same number of columns for every record. this will always be the case. it's pretty rare that i would subset by rows when creating a new column. however, it's pretty common for me to subset on rows when creating reports or generating descriptive statistics. for example, i might want to create a simple frequency for a specific line of business, say retail credit cards. to do this, i would select only those records where the line of business = retail in addition to whichever columns i want to report on. when creating new columns, however, i would pull all rows of data and only the columns i need for the operations. the modeling process requires that i analyze every column, look for interesting relationships with some outcome variable, and create new compound columns that describe those relationships. the columns that i explore are usually done in small sets. for example, i will focus on a set of say 20 columns just dealing with property values and observe how they relate to defaulting on a loan. once those are explored and new columns are created, i then move on to another group of columns, say college education, and repeat the process. what i'm doing is creating candidate variables that explain the relationship between my data and some outcome. at the very end of this process, i apply some learning techniques that create an equation out of those compound columns. it is rare that i would ever add rows to the dataset. i will nearly always be creating new columns (variables or features in statistics/machine learning parlance).", "in server.js, please include code_removed", "#2, #3, #5 are not true today anymore (i know this answer was written a long time ago). also: if you end up with #1 / #4 it means you used mongodb without knowing what it is and what it is supposed to do. right tool for the job...", "as suggested by code_removed, you can use the eval command, for those who are missing it like i was, you can also add in your db name if you are not trying to preform operation on the default db. code_removed", "in case you want to connect a remote mongodb server like mongolab.com, you should pass connection credentials eg. code_removed", "if i understand what you're saying, the answer is just to remove the code_removed. the purpose of this modifier is to not update existing records. if you want to affect existing records, the normal code_removed will do that.", "how to implement somethings similar to code_removed but while updating documents? now i'm using something really crappy like getting documents with code_removed and then updating them. in general i wanna to return given number of records and change one field in each of them. thanks.", "how do i use mongohq's web interface with my own databases?", "by the way here is the documentation: docs.mongodb.org/manual/tutorial/query-documents/\u2026", "to convert int32 to string in mongo without creating an array just add \"\" to your number:-) code_removed", "i didn't know about code_removed helper, but if you prefer to go with the aggregation framework, then you'll have to specify which fields to return. correct me if i'm wrong, but in sql you would have to do that anyway. well, this is how you would do it with the aggregation framework mentioned before: code_removed", "i think if you run it with the code_removed command line switch, it installs it as a windows service. code_removed it might be worth reading this thread first though. there seems to be some problems with relative/absolute paths when the relevant registry key gets written.", "code_removed", "if you don't feel like iterating, try code_removed or code_removed code_removed returns a query, which has a code_removed function.", "for better understanding i have written similar mysql query. code_removed mongodb: db.collection_name.find({},{name:true,email:true,phone:true}); mysql: select name,email,phone from table_name; code_removed mongodb: db.collection_name.find({email:'you@email.com'},{name:true,email:true,phone:true}); mysql: select name,email,phone from table_name where email = 'you@email.com';", "if i query the collection by geonear and sort by default distance, how can i avoid to use code_removed to do pagination?", "edit this to just use code_removed", "@treeface i think matt was referring to the fact js's built-in methods all use camelcase, both in node and in browsers", "hi, i'm playing around with your example as well and i run into this error when trying to insert into a database: code_removed. any ideas what might be wrong? my dataframe consists of all int64 dtypes and is very simple.", "you can also use the helper method exists over the mongo operator $exists code_removed", "if you are using express framework to node.js install npm ejs then add config file code_removed ; render the page from exports module form.js have the html file in the views dir with extension of ejs file name as code_removed then create the form.js code_removed", "why the book code_removed said that it defaulted to code_removed? i don't know why.", "@scaryguy, \"server side\" would be in the mongodb application while \"client side\" is your application code. your application connects as a client to the mongodb server. do not confuse this with machines; both processes might run on the same machine. client and server are just describing two different roles in inter-process communication.", "i need to change datatype of multiple fields in the collection, so i used the following to make multiple data type changes in the collection of documents. answer to an old question but may be helpful for others. code_removed", "as imo this has nothing to do with programming per se, i'd recommend you to ask this question on serverfault.com.", "what do you need specifically? if you need toku technology applied to mongodb try github.com/tokutek/mongo, if you need the mysql version maybe they added it to their standard version of mysql that they usually provide with", "valleyprogramming.com/blog/\u2026", "do you need mongo shell? or regular unix shell will do?:)", "@tyrsius, well not really. i'm saying that you shouldn't just render an html file. if you really really have to send it from within a route you could read the file with code_removed and then send the plain text. what i suggest doing is redirecting to the html file instead of trying to directly render it inside the route.", "@lu\u00edssoares idk if trying to use code_removed would help? aka, was the security message because of not having admin rights? if so try putting code_removed.", "most people won't use nosql databases for the very specific use-case they were created for, reinventing so many wheels afterwards. the nosql vs. sql debate shows that many people experience using nosql as if they were going back 20-30 years in time, to pre-codd, pre-relational, pre-sql times. or, as michael stonebraker puts it: \"what goes around comes around\"", "if i run this script, it will just duplicate the same document 30 times. how can i modify this to duplicate 100 different documents (any documents)?", "if i want specific key name from array,how can i get?", "i fail in first step.i was version v3.6.5.the same warning and it shutdown", "you can always use mongoose built-in function: code_removed", "@niftylettuce this question is about the mongodb shell, not the node.js driver. code_removed is still the right answer for the shell.", "how i can use like query? i have tried this but not working: code_removed", "your code_removed process is clearly not running. look at the log code_removed for reasons why. also make sure you followed all the instructions on install mongodb on ubuntu. try to start the service, or restart the machine. clean install if necessary.", "sendfile is not cache in production mode so this is not a good solution.", "isn't the code_removed redundant if you're specifying the case-insensitive flag of code_removed?", "findandmodify by definition only works on a single document, but unless you need the modified document returned, you should simply use \"update\".", "3 and 4 are kind of contradictory -- js prefers camelcase, mongo seems to prefer underscores... but when in doubt, go for underscores. people accustomed to non-latin alphabets will thank you.", "mogodb is schemaless. and as the data stored in database get bigger and bigger, mongodb proves that it is much faster than redis. redis is only faster when the stored data is small.", "how unlikely is it? should i code with the assumption that this will never happen to me unless i insert duplicates manually?", "code_removed is the tool to use to import bson files that were dumped by code_removed. from the docs: mongorestore takes the output from mongodump and restores it. example: code_removed", "it seems like the code_removed operator would serve your purposes just fine. you could do something like this (pseudo-query): code_removed alternatively, you could remove the code_removed clause and get back a set of all classes the student is enrolled in.", "very useful since setting code_removed doesn't wipe the field during save like my library does - it actually saves null", "this pointed me in the right direction. on my server i had to do sudo rm /var/log/mongodb/mongodb.log and sudo rm /tmp/mongodb-27017.sock.", "code_removed", "thanks. when developing on mac with brew, this fixes the issue. no need for more security if you are just using test data in mongodb. @markuswmahlberg on os x, the user running mongod is your_user_name if you simply start it with \"mongod &\".", "how to do it for oldvalue+\"some string\"", "interesting form of making your point (so upvote from me for that). however, i think you're talking more about a bad approach to creating rdmbs-based apps, than rdbms themselves. because yes, nosql helps with scaling, no doubt, but you still need to think about scaling with rdbms too in advance, and minimalize problems like you mentioned, e.g. by creating an api or whatever as a middle-layer between an app and a database. i do so for simple android apps, so with bigger web apps it's a requirement to do sth like this.", "the latter one works for me,, thanks", "this link can be helpfull", "please take following steps: as other friends mentioned, you should make a directory first for your database data to be stored. this folder could be something like: c: mongo-data from command line navigate to where you have installed mongodb and where mongod.exe resides. in my case the full path is: c: program files mongodb server 3.4 bin from here run mongod.exe and pass it the path to the folder you created in step one using the flag --dbpath as follows: mongod.exe --dbpath \"c: mongo-data\" please note: if you are on windows it is necessary to use double-quotes (\"\") in the above to run properly. in this way you will get something like the following: code_removed if you use single quotes (' ') on windows, you will get: code_removed hope it helps to resolve the issue.", "if the server is running as the foreground process in a terminal, this can be done by pressing code_removed another way to cleanly shut down a running server is to use the shutdown command, code_removed otherwise, a command like kill can be used to send the signal. if mongod has 10014 as its pid, the command would be code_removed", "i've addressed your new questions. i will have a proper, pseudocode example for you this weekend. thanks!", "still works in mongodb version 2.6.1. further, was able to update another field at the same time: code_removed", "thank you. it works nice. i tried with code_removed and code_removed without a success. doesn't understand working of positional operators here?", "try /usr/lib/mongodb/mongod.exe --dbpath c:data db --dbpath (should be followed by the path of your db)", "there is no $multi parameter. there's a multi option (which is what you linked to), but that does not affect how fields are updated. it controls whether you update a single document, or all documents that match the query parameter.", "i am trying to setup the authentication on mongodb. i've uncommented code_removed in configuration file and restarted the server. the first connection via mongo was rejected. the second one (immediately after the first one) went through and i got this in the logs: code_removed while in console, i am able to execute commands, however if i try to follow any of the numberous tutorials (including the official ones), i get either code_removed when executing code_removed or code_removed when executing code_removed: the object which i am passing is: code_removed", "can you share you results?", "even easier, especially with tab completion: code_removed edit: also works with the code_removed command for prettier output.", "it must be slow indeed!", "@nielsvanderrest what's the meaning of 389z and 240z? and, how can i insert my own date and time? when i insert something like code_removed, it changes the time!", "the bbc and meebo.com use couchdb in production and so does one of my clients. here is a list of other people using couch: couchdb in the wild the major challenge is to know how to organize your documents and stop thinking in terms of relational data.", "code_removed this is not off-topic. in fact, i reached this question due to the title. so people like me benefit reading such an answer. also, i am giving a very useful method in the example rather than a toy example.", "you have 2 choices: code_removed or code_removed on second one you have more options, like \"i\" in options to find using case insensitive. and about the \"string\", you can use like \".string.\" (%string%), or \"string.*\" (string%) and \".*string) (%string) for example. you can use regular expression as you want. enjoy!", "i know this is an old question, but maybe someone will look at it again. here is a presentation by a sourceforge dev about how they employ mongodo: infoq.com/presentations/mongodb-at-sourceforge", "note that the op's collection is not an array, it's a mongo db cursor object, which doesn't seem to have a code_removed method, so you'd have to call its code_removed method before you could code_removed", "you can always use robomongo. as of v0.8.3 there is a tool that can do this by right-clicking on the collection and selecting \"copy collection to database\" for details, see this feature was removed in 0.8.5 due to its buggy nature so you will have to use 0.8.3 or 0.8.4 if you want to try it out.", "how will that be stored in the db? as a mongo datetime object?", "definitely useful because you cannot use \"use mydb\" within a js file.", "is there a way to not load every document to client to calc its size? perhaps using aggregation somehow.", "in mongodb _id field is reserved for primary key. mongodb use an internal objectid value if you don't define it in your object and also create an index to ensure performance. but you can put your own unique value for _id and mongodb will use it instead of making one for you. and even if you want to use multiple field as primary key you can use an object: code_removed just be careful when creating these ids that the order of keys (a and b in the example) matters, if you swap them around, it is considered a different object.", "were those code_removed batched?", "\"users were informed of this danger, albeit not so explicitly. users should read all the documentation before they begin.\" on what planet is that typical?", "you should iterate through. for your specific case: code_removed", "if you use this to create temporary collections, then you need to be wary of collection name collisions. this might run simultaneously from multiple application calls. one work around is to use a uuid for the collection name.", "... schema-free forces its users into a guessing game. and even if those users can manage to get it right 90 or 99% of the time, it's still just that, a guessing game.", "i might be a bit late to this party, but i've just come across this problem. my solution was to build a dictionary of (in my case) code_removed to position (that is, position in the list i used for the code_removed query), and then use that to rearrange the output. i am operating on a small number of items, though, so perhaps this isn't helpful for your case.", "this case worked out for me, i had to do ~>sudo mongod --dbpath /dbpathlocation and then opened the new terminal to run mongo...", "as mongo shell support regex, that's completely possible. code_removed if we want the query to be case-insensitive, we can use \"i\" option, like shown below: code_removed see:", "mongohub is moved to a native mac version, please check", "i did look into the mongo logs. all it kept saying way that lack of the /data/db directory was preventing startup. eventually came across your answer and that seems to be the reason for the issues?", "as long as you are ok with creating a copy of the data, the aggregation framework can be used as an alternative here. you also have the option to do more to the data if you wish using other operators, but the only one you need is code_removed. it's somewhat wasteful in terms of space, but may be faster and more appropriate for some uses. to illustrate, i'll first insert some sample data into the code_removed collection: code_removed now, we just use code_removed to rework the code_removed and code_removed fields, then send them to the code_removed collection: code_removed then check code_removed for our altered data: code_removed once you are happy with the new data, you can then use the code_removed command to drop the old data and use the new data under the old name: code_removed one last note - until server-7944 is completed you can't do the equivalent of a snapshot by hinting the code_removed index as suggested in this answer and so you can end up hitting a document more than once if activity elsewhere causes it to move. since you are inserting the code_removed field in this example, any such occurrence would cause a unique key violation, so you will not end up with dupes, but you might have an \"old\" version of a document. as always, check your data thoroughly before dropping it, and preferably take a backup.", "you can use the copydatabase function in the mongo shell:", "why is code_removed null?", "you have 2 choices: code_removed or code_removed on second one you have more options, like \"i\" in options to find using case insensitive. and about the \"string\", you can use like \".string.\" (%string%), or \"string.*\" (string%) and \".*string) (%string) for example. you can use regular expression as you want. enjoy!", "just a word for if you are banging your head against the wall because nothing is mass updated: the code_removed in the code_removed method of the code_removed version are: code_removed. you need the code_removed to update all your records.", "possible duplicate of mongo: find items that don't have a certain field", "could somebody please explain how to index this.", "@andrew great tip, however it's code_removed which will break the some loop", "i know this is an old thread, but i seem to have a similar need. i'm using the nodejs mongodb native driver. the resulting temporary collection seems to empty always. i'm using the mapreduce function in the collection class for this. is that not possible?", "start your mongo client with a command mongo, the first line displays the version of your mongodb. in case it didn't show up means there is no mongodb installed in your system example: code_removed", "if you are coming from the mysql world, mongodb is going to \"feel\" a lot more natural to you because of its query-like language support. i think that is what makes it so friendly for a lot of people. couchdb is fantastic if you want to utilize the really great master-master replication support with a multi-node setup, possibly in different data centers or something like that. mongodb's replication (replica sets) is a master-slave-slave-slave-* setup, you can only write to the master in a replica set and read from any of them. for a standard site configuration, that is fine. it maps to mysql usage really well. but if you are trying to create a global service like a cdn that needs to keep all global nodes synced even though read/write to all of them, something like the replication in couchdb is going to be a huge boon to you. while mongodb has a query-like language that you can use and feels very intuitive, couchdb takes a \"map-reduce\" approach and this concepts of views. it feels odd at first, but as you get the hang of it, it really starts feeling intuitive. here is a quick overview so it makes some sense: couchdb stores all your data in a b-tree you cannot \"query\" it dynamically with something like \"select * from user where...\" instead, you define discrete \"views\" of your data... \"here is a view of all my users\", \"here is a view of all users older than 10\" \"here is a view of all users older than 30\" and so on. these views are defined using map-reduce approach and are defined as javascript functions. when you define a view, the db starts feeding all the documents of the db you assigned the view to, through it and recording the results of your functions as the \"index\" on that data. there are some basic queries you can do on the views like asking for a specific key (id) or range of ids regardless of what your map/reduce function does. read through these slides, it's the best clarification of map/reduce in couch i've seen. so both of these sources use json documents, but couchdb follows this more \"every server is a master and can sync with the world\" approach which is fantastic if you need it, while mongodb is really the mysql of the nosql world. so if that sounds more like what you need/want, go for that. little differences like mongo's binary protocol vs the restful interface of couchdb are all minor details. if you want raw speed and to hell with data safety, you can make mongo run faster than couchdb as you can tell it to operate out of memory and not commit things to disk except for sparse intervals. you can do the same with couch, but it's communication protocol is going to be 2-4x slower than raw binary communication with mongo in this \"speed over everything!\" scenario. keep in mind that raw crazy insane speed is useless if a server crash or disk failure corrupts and toasts your db into oblivion, so that data point isn't as amazing as it might seem (unless you are doing real-time trading systems on wall street, in which case look at redis). hope that all helps!", "you can also try this:- code_removed found it in this post here obviously the localhost can be some other host and the /admin can be some other database on which authentication has been applied", "if you are using mongoskin like i do: change code_removed to code_removed", "this one is not thread safe...", "i've got a mongodb database that was once large (>3gb). since then, documents have been deleted and i was expecting the size of the database files to decrease accordingly. but since mongodb keeps allocated space, the files are still large. i read here and there that the admin command code_removed is used to free the unused space, but i don't have enough space on the disk to run this command. do you know a way i can freed up unused space?", "aggregate $undiwnd shapes at the start of the aggregation is crazy high costs in larg databases, very very not recomended", "actually i want it to do automatically with the help of cron job on nodejs. so whenever cron job hits the command, then simply copy the collection and paste to the new collection", "to expand slightly on what andre said: since the objectid timestamp is only to the second, two (or more) objectids could easily be created with the same value for the timestamp (the first 4 bytes). if these were created on the same machine (machine id - the next 3 bytes), by the same process (pid - the next 2 bytes), then the only thing to differentiate them would be the \"inc\" field, the last 3 bytes at the end. see here for the full spec: that \"inc\" field is either an ever incrementing field (then you can reasonably expect the sort to be in the insert/create order) or a random value (then likely unique, but not ordered), assuming the spec is implemented correctly of course. note that the objectids may be generated by the driver, or the application (or indeed manually) rather than by mongodb itself, so unless you have full control over how they are generated, then any or all of the above may apply.", "perfect answer. as you mentioned $unwind will consume lot of ram. so this will be better when compared.", "this is a nice description how to setup oplog for logging changes to db locally: loosexaml.wordpress.com/2012/09/03/\u2026", "reading is good:)", "convert string field to integer: code_removed convert integer field to string: code_removed", "since mongodb 3.6 there will be a new notifications api called change streams which you can use for this. see this blog post for an example. example from it: code_removed", "additionally this appears to be, as far as i can tell, the official 10gen java driver for mongodb so in addition to having an opinion on the java driver, i think it gives me an opinion on the code of mongodb", "for php mongo like. i had several issues with php mongo like. i found that concatenating the regex params helps in some situations php mongo find field starts with. i figured i would post on here to contribute to the more popular thread e.g code_removed", "starting with the 3.2 release of mongodb, you can get n random docs from a collection using the code_removed aggregation pipeline operator: code_removed", "@enyo, you missed the point of the steamlined architecture. when the pattern is controller/view (or /processor/view, whatever your specific architecture is), you can't deviate from that with with the obsolete model of extensions. you need to treat your html as rendered content like everything else. keep it dry, dude.", "this is a huge performance bottle neck as the update takes a lot of time", "sounds like a bug in mongoose or mongodb?", "hi @johnnyhk, i've posted a question where i have a similar issue. i've tried using code_removed like you showed, but with no success. any help will be much appreciated!", "any chance of an example - changing a field type from int to string (or vice versa), from the shell?", "as of 2.2, insert can take an array of docs, so you could do code_removed. i haven't found performance to be very good in either case, though", "this link may help you codefari.com/2015/11/\u2026", "one needs to be careful here, though. this only works if the selector of the findandmodify/findoneandupdate/updateone uniquely identifies one document by _id. otherwise the upsert is split up on the server into a query and an update/insert. the update will still be atomic. but the query and the update together will not be executed atomically.", "this is dangerous. you are not escaping username, so any arbitrary regex can be injected.", "so what should be used in production instead?", "agreed. also i discovered to my pleasant surprise that code_removed and code_removed work as desired with dates stored as strings: code_removed does, in fact, return all documents created since january 1, 2012.", "for string to int conversion. code_removed for string to double conversion. code_removed for float: code_removed", "these things not worked for me. it says message.find(...).foreach is not a function", "this is insert operation: code_removed after insert u get last inserted id: code_removed after getting value convert to inter type.", "@johnnyhk -- so would you actually have to specify the index, code_removed etc?", "actually i think angularfire is amazing, is there any way u can take it and pass it over to use with your own database system?, in this case with mongo, so it would be amazing u can make use of three data-way binding and also to be able to instantaneously update your values", "read this stackoverflow.com/questions/10336899/\u2026", "i had to do: array( 'key' => array( '$regex' => new mongoregex('/^'. $val. '$/i')));", "that's a smart idea, @chrisallenlane. the mongodb shell is quite a dangerous tool at times...:)", "to store this unstructured data as you said, mongodb is best suitable to store unstructured data. and this can organize your data into document format. these rdbms altenatives called nosql data stores (mongodb, couchdb, voldemort) are very useful for applications that scales massively and require faster data access from these big data stores. and the implementation of these databases are simpler than the regular rdbms. since these are simple key-valued or document style binary objects directly serialized into disk. these data stores don't enforce the acid properties, and any schemas. this doesn't provide any transaction abilities. so this can scale big and we can achieve faster access (both read and write). but in contrast, rdbm enforces acid and schemas on datas. if you wanted to work with structured data you can go ahead with rdbm. i would choose mysql for creating forums for this kind of stuff. because this is not going to scale big. and this is a very simple (common) application which has structured relations among the data.", "default path is code_removed not code_removed", "i'm wondering if this same code can be ran using doctrine mongodb?", "your sorting function may be wrong. it should be code_removed", "submitting this as an answer as i don't have the privilege to comment. i have a 3 member replica set (version 3.4) and faced the same issue with the below command. mongoimport --db test --drop rides.json got the same error with the below command suggested by whythecode,<br/> mongoimport --host=127.0.0.1 --db test rides.json the following command was able to import mongoimport --host=127.0.0.1:27018 --db test rides.json note that the primary was running on 27018. also, it wasn't necessary to reset the replica set or run it as standalone.", "as of 4.0, mongodb will have multi-document acid transactions. the plan is to enable those in replica set deployments first, followed by the sharded clusters. transactions in mongodb will feel just like transactions developers are familiar with from relational databases - they'll be multi-statement, with similar semantics and syntax (like code_removed and code_removed). importantly, the changes to mongodb that enable transactions do not impact performance for workloads that do not require them. for more details see here.", "mongodb is fast, but only when your working set or index can fit into ram. so if my server has 16g of ram, does that mean the sizes of all my collections need to be less than or equal to 16g? how does one say \"ok this is my working set, the rest can be \"archived?\"", "code_removed will list all the collections in the currently selected db, as stated in the command line help (code_removed).", "@evandrix: see server-14623. the fix for this issue is code_removed", "in mycase in mongodb version 2.6.11 default databse directory is code_removed $ sudo chown -r code_removed /var/lib/mongodb/ $ sudo chown -r code_removed /var/lib/mongodb/mongod.lock code_removed code_removed", "i had the same exact challenge, the easiest way to solve it was to make a copy of the database with the copydatabase() function, then to db.dropdatabase() the original database and then to copy the database back in place. my database was mostly empty and when i did the copy, only the actual usable data was copied over. dropping the original database deleted the large files. using db.repairdatabase() was not an option since my server was already low in disk space and this operation would have required a very large amount of free space, much more than necessary for this operation.", "note that in my case, when i wanted to {$set:{val:numberint(0)}} at some \"val\" that's already set as long, it didn't change it. i had to first change it to some other value, then change it back to 0, for the numberint(0) to take effect", "since i just stepped into this, let me add that some drivers (e.g. c), though uses increments, does not increment atomically, so time to time, it generates the same oid due to race condition", "how to get the total no of pages", "code_removed replace code_removed with name of collection you want to execute query", "how i can use like query? i have tried this but not working: code_removed", "can you explain how this works?", "code_removed should be renamed code_removed, it's super buggy... i can't recommend it. crashes all the time*.", "you are right, but i don't think it's a big deal as the time complexity of this would be code_removed which can be considered as code_removed.", "one datestamp is already in the _id object, representing insert time so if the insert time is what you need, it's already there: login to mongodb shell code_removed create your database by inserting items code_removed lets make that database the one we are on now code_removed get the rows back: code_removed get each row in yyyy-mm-dd hh:mm:ss format: code_removed if that last one-liner confuses you i have a walkthrough on how that works here: protip, mongodb is best db because mongodb is web-scale:", "i tried in this model as per my requirements i need to store a date when ever a object is created later i want to retrieve all the records (documents ) between two dates in my html file i was using the following format mm/dd/yyyy code_removed in my py (python) file i converted it into \"iso fomate\" in following way code_removed and saved in my dbmongo collection with \"selecteddate\" as field in my collection to retrieve data or documents between to 2 dates i used following query code_removed", "you saved me! thanks", "note that as the documentation tells you both code_removed and code_removed only return the first match.", "this worked for me: code_removed", "this is the updated code for code_removed. it works. code_removed", "this seems really good. why don't i see more people suggesting this?", "@gates vp, i agree!", "that's bad that a repair can damage things!", "$ mongoimport -d marketdata -c minibars --type csv --headerline --file '/users/aditya/downloads/mstf.csv' gurantaed result experienced by manoj barik", "code_removed", "code_removed", "code_removed could potentially empty your entire collection if you accidentally pass code_removed. for that reason i prefer code_removed if i am only removing one document.", "is the 'gen' mongodb actually being dropped? in mine case, on restore, i can see the previous records that was added after taking the dump. can you solve my issue here.. stackoverflow.com/questions/22424347/\u2026", "ok, i suppose that this is a silly question and probably has a simple answer. how can i duplicate a document in mongodb, changing the _id of the new one? imaging that you have the original document: code_removed and now i want another document in the collection with _id 'bye'.", "i want to back up @valentinwaeselynck answer. scotch's code is clean - but you are fetching a document and then updating. in the middle of that process the document could of been changed.", "if you're using robomongo or something similar, in order to use your stored function you need to run \"db.loadserverscripts();\" first.", "i'm sure you can with mongo (more familiar with it), and pretty sure you can with couch too. both are documented oriented (json-based) so there would be no \"columns\" but rather fields in documents -- but they can be fully dynamic. they both do it you may want to look at other factors on which to use: other features you care about, popularity, etc. google insights, indeed.com job posts would be ways to look at popularity. you could just try it i think you should be able to have mongo running in 5 minutes.", "does this works on version 3.2?", "what he maybe means is that all mongoose objects are created with an _id for those who use this framework \u2013 see mongoose subdocs", "i have faced with exactly the same problem and i solved it and here are the explanations step by step: before trying everything else, just change to the mongodb directory which contains the bin directory for mongodb, and simply use command in the terminal: sudo bin/mongod running mongodb as the root user and you may be asked to enter the password as the root user. if you still can not run the mongodb, then let's do the following: firstly, let's see the permission mode of the data directory of mongodb by typing in the terminal: ls -ld /data (p.s. or we can just type \"ls -l /\" to see the permission modes of all the directories and files in the root directory including the /data directory.) and the permission mode for the root user should be \"rwx\", namely the root user being able to read, write and execute the files. to make this happen, we use the command to change the permission mode by typing in terminal: chmod 755 /data (i.e. 755 is a specific octal notation of permission setting argument) this sets the permission modes of /data directory to \"rwxr-xr-x\", namely, the root user being able to read, write and execute whereas the group user and everyone else being able to only read and execute. note: when you are denied to carry out this operation, type instead: sudo chmod 755 /data to set the permission as the root user. then when this step is done, let's recapture the permission modes by typing again: ls -ld /data and the output should look like this: drwxr-xr-x 3 root wheel 102 mar 3 17:00 /data (p.s.you don't need to worry about the \"d\" at the beginning) and notice the \"rwxr-xr-x\" setting is now done. then we are all set and you can now change back to the mongodb directory and type: sudo bin/mongod to run the mongodb. hope this helps.", "it is tough if there is no data there to key off of. what are the _id field? are they mongodb object id's? if so, you could get the highest and lowest values: code_removed then if you assume the id's are uniformly distributed (but they aren't, but at least it's a start): code_removed", "@chrishinkle this seems to be the case with all dbmss. lex's comment below the linked answer seems to explain more.", "for switch to the database. by:- use {your_database_name} example: code_removed where friends is the name of your database. then write:- code_removed this will give you the name of collections.", "but it is the timestamp for when the document was saved in the db, sometimes you want to store dates and times not related to the insert date.", "in mongo 3.0.4 the command for creating a user is db.createuser().", "@eduardomelo you are right! i modified the answer", "to remove or delete field in mongodb for single record code_removed for multi record code_removed", "i had the same problem and code_removed worked for me", "failed to kill process: errno:1 operation not permitted.", "i've added an example here: groups.google.com/d/msg/node-mongodb-native/msgnnug8c1o/\u2026", "cheap benchmarks are always better than no benchmarks. thanks for the question mate.", "for loopback3 all the examples given did not work for me, or as fast as using rest api anyway. but it helped me to figure out the exact answer i needed. code_removed", "was the clearest answer for me", "you can add code_removed to your file in code_removed to enable pretty print globally by default.", "if you're using robomongo, this article tells you how to enable uuidhelpers.js: robomongo.org/articles/uuids.html", "its works fine. may i know how to change datatype within embedded document fields", "@aboozarrajabi the code_removed and code_removed are the milliseconds of the timestamp. the code_removed in the string format tells mongodb that the timestamp you provided is in utc. if you then read it back, your application probably converts it to your local timezone, making it seem like the time has changed. but the time is still the same, it's only interpreted from a different timezone perspective. for example code_removed and code_removed represent the same moment in time.", "@kilianc that's not true. $exists will capture null-values as well. see docs.mongodb.org/manual/reference/operator/query/exists", "you can create sub-documents without schema and avoid _id. just add _id:false to your subdocument declaration. code_removed this will prevent the creation of an _id field in your subdoc. tested in mongoose 3.8.1", "once you opened the mongo cli, connected and authorized on the right database. the following example shows how to find the document with the _id=568c28fffc4be30d44d0398e from a collection called \u201cproducts\u201d: code_removed", "thanks. its worked.", "full command: code_removed", "with right combination of $lookup, $project and $match, you can join mutiple tables on multiple parameters. this is because they can be chained multiple times. suppose we want to do following (reference) code_removed step 1: link all tables you can $lookup as many tables as you want. $lookup - one for each table in query $unwind - because data is denormalised correctly, else wrapped in arrays python code.. code_removed step 2: define all conditionals $project: define all conditional statements here, plus all the variables you'd like to select. python code.. code_removed step 3: join all the conditionals $match - join all conditions using or or and etc. there can be multiples of these. $project: undefine all conditionals python code.. code_removed pretty much any combination of tables, conditionals and joins can be done in this manner.", "videos will tend to be > 16mb so this answer is probably reasonable. should perhaps mention this though.", "use $count operator to get the total count of aggregation result query: code_removed result: code_removed", "code_removed", "according to the documentation, loglevel 0 does not mean \"no logging\" but it logs slow queries: \"the profiler is off, does not collect any data. mongod always writes operations longer than the slowopthresholdms threshold to its log.\" src: docs.mongodb.com/v3.2/tutorial/manage-the-database-profiler/\u200c\u200b\u2026", "@kennyworden an effective approach to find the answer -> mongoosejs.com/docs/api.html then search for what you want but prepend '#' to the in-page search with your browser such as search on '#save' and you'll see it returns a promise.", "you can use any of the following to achieve this. both also take care of not returning a result for objects that don't have the requested key in them: code_removed", "@snowburnt greate explanation", "@sammaye you're right...it will need a script to reach into all docs and compare all keys then print a tree structure is probably a good visual way to show the whole structure and make it digestible", "run cmd as administrator and run this command: sc.exe create mongodb binpath= \"d: mongodb bin mongod.exe --service --config=d: mongodb bin mongod.config\" displayname= \"mongodb 2.6 standard\" start= \"auto\"", "using code_removed to individually update each document is slow. you can update the documents in bulk using code_removed", "in a way you are correct, if you sort by the code_removed you will sort by the insertion time. this does not mean that the only comparison is done on the timestamp portion. objectid's are a bson object type in their own right, they can be directly compared with each other. as they start with a timestamp, it follows logically that those in the past will be less than those in the future. you can find more detail in the documentation", "i was also scratching my head around the same issue, and everything worked after i set the role to be root when adding the first admin user. code_removed for a complete authentication setting reference, see the steps i've compiled after hours of research over the internet.", "this is a bit weird... you should serve html as static files. this also gives you the benefit of better caching. creating a custom \"html compiler\" seems wrong. if you need to send a file from within a route (which you very rarely need to do) just read and send it. otherwise just redirect to the static html.", "cause \"e11000 duplicate key error index\"", "you can use dot-notation to access and set fields deep inside objects, without affecting the other properties of those objects. given the object you specified above: code_removed we can update just code_removed and code_removed: code_removed you can delve as deep as you like. this is also useful for adding new properties to an object without affecting the existing ones.", "@anujgupta \"the repairdatabase command compacts all collections in the database. it is identical to running the compact command on each collection individually.\" docs.mongodb.org/manual/reference/command/repairdatabase/\u2026. so if the repairdatabase reduces the size so as compact. i've been compacting my collections with lots of delete and update every week. i like compact more than reparidatabase because first it's targeted to collections you want not the entire database. second it just needs 2gb free space instead of x2 of your db filesize (in my case 500gb).", "simply do code_removed", "also worked for mongoose 4.7.6", "i was very disappointed with mongovue", "this selects a document randomly, but if you do it more than once, the lookups are not independent. you are more likely to get the same document twice in a row than random chance would dictate.", "in the beginning, i did not get why the question has a bounty (i thought that the question has a nice answer and there is nothing to add), but then i noticed that the answer which was accepted and upvoted 15 times was actually wrong! yes, you have to use code_removed operator, but this unset is going to remove the words key which does not exist for a document for a collection. so basically it will do nothing. so you need to tell mongo to look in the document tags and then in the words using dot notation. so the correct query is. code_removed just for the sake of completion, i will refer to another way of doing it, which is much worse, but this way you can change the field with any custom code (even based on another field from this document).", "i think this answer doesn't work for the question but it did solve my problem: finding keys in a doc. +1", "avoid link-only answers.", "i am using mongobooster. i like it.", "i think if you run it with the code_removed command line switch, it installs it as a windows service. code_removed it might be worth reading this thread first though. there seems to be some problems with relative/absolute paths when the relevant registry key gets written.", "seems wrong performance wise coming from a sql server background, but its maybe not that bad with a document db?", "at a glance, it looks like this is a better answer than the accepted answer.", "you need to start code_removed with the code_removed option after setting up the user. from the mongodb site: run the database (mongod process) with the code_removed option to enable security. you must either have added a user to the admin db before starting the server with code_removed, or add the first user from the localhost interface. mongodb authentication", "@batbrat: consider two clients who attempt to simultaneously write to different collections in the same database. with a database lock, one of the clients will have to wait for the other to finish before its write can occur. with a collection lock both clients can write at the same time. that's what is meant by increased concurrency. of course, if both clients attempt to write to the same collection then one will have to wait.", "@ryanshripat: i don't know why my name doesn't appear in the list, but you do realize that this is my question and i voted to close it? there are a lot of obsolete and/or unhelpful answers here, some duplicate answers, and some actual spam that you can't see right now because it was deleted. i got value out of this question at the time, but it's just not necessary anymore, and eliminating this kind of noise was precisely the spirit and intent of stack overflow. i'd probably say it shouldn't be deleted, but it should definitely stay closed.", "is this still valid today?", "if i understand the question correctly, you want to update a document with the contents of another document, but only the fields that are not already present, and completely ignore the fields that are already set (even if to another value). there is no way to do that in a single command. you have to query the document first, figure out what you want to code_removed and then update it (using the old values as a matching filter to make sure you don't get concurrent updates in between). another reading of your question would be that you are happy with code_removed, but do not want to explicitly set all fields. how would you pass in the data then? you know you can do the following: code_removed", "you can do it with the following code. code_removed", "awesome that's exactly what i needed, thanks!", "this really helps, thank you.", "more info can be found here: docs.mongodb.org/manual/tutorial/\u2026", "ok, maybe inefficient, but surely convenient. try this if your data size isn't too big", "to add: 1. login to admin database with mongodb superadmin first: code_removed 2. then switch to the target database: code_removed 3. then add the user code_removed", "if you want to clone the row, but without explicitely typing a new id, just delete the \"_id\" property before doing the insert command: delete orig._id", "@dan: i haven't used mongodb in a while, but my best guess is that it's the size of the data stored in the collection vs. the total amount allocated to that collection (to handle minor updates and growth without having to constantly reallocate new space for the entire collection's contents).", "you were in the correct folder if you got the./mongod working! you now need to open another terminal, go to the same folder and type./mongo the first terminal window serves as your server, the second is where you enter your commands!", "that's cool and all, but stackoverflow answers are not expecting a 20-page link dump. toss up a tl;dr? indexes also don't seem relevant to what op is asking for.", "thanks for reply but i am using mac. you can identify by looking at the commands i used in my question. and./mongo in mac is similar to running mongo.exe on windows.", "this railscast seems really interesting; going to take a look at it, hopefully i'll have a better understanding of how this works.", "mongodb v3.4 you need to do the following to create a secure database: make sure the user starting the process has permissions and that the directories exist (code_removed in this case). 1) start mongodb without access control. code_removed 2) connect to the instance. code_removed 3) create the user administrator (in the admin authentication database). code_removed 4) re-start the mongodb instance with access control. code_removed 5) connect and authenticate as the user administrator. code_removed 6) create additional users as needed for your deployment (e.g. in the test authentication database). code_removed 7) connect and authenticate as mytester. code_removed i basically just explained the short version of the official docs here:", "why haven't you referenced jepsen tests for previous versions? for version 2.6.7 released in 2015 it claims that mongo\u2019s consistency model is broken by design. does it mean it was broken and is fixed now or you insist it was never broken?", "as of today (2010-11-18) dwight (speaking at the mongodc event in washington, dc) recommended the replicate / --repair / switch over approach if you want to compact without taking your database offline.", "starting with the 2.6 release, another way to do this is to compare the field to an empty array: code_removed testing it out in the shell: code_removed so it properly includes the docs where code_removed has at least one array element, and excludes the docs where code_removed is either an empty array, not an array, or missing.", "i had to add a -r to this. \"sudo chown -r $user /data/db\"", "thanks for your explanation now i'm doing another example and i'm knowing better this time.", "i have two mongodbs in different server, both start with code_removed. now i want to copy a db from one server to another. code_removed it shows: code_removed and: code_removed seems no error, but the copy is not successful. what's the correct command to use?", "in my experience, working with firebase is a huge advantage if you are trying to do user management, database, messaging sort of app since all of these features are already well integrated. like others have said, if you're just focused on the database/querying aspect, stick to mongo.", "you can also try this:- code_removed found it in this post here obviously the localhost can be some other host and the /admin can be some other database on which authentication has been applied", "top answer, thanks mate", "i am using mac and i have successfully logged in to the server and started the server using the following command code_removed then it says code_removed and after that whatever i write, its just a text. terminal is not accepting any command. response says \"waiting for connections on port 27017\". what should i do to get rid of this? i also tried command to start the shell by the following commnad: code_removed but its also a text there. please help.", "option1: start the console and execute this: code_removed option2: open a shell console and do: $ mongod --version it will show you something like $ mongod --version db version v3.0.2", "++ it not clear to me why this is off-topic. the question does have clear objective answers -- the op is not asking for opinion but for objective information about these two systems. user799188 provided a great objective answer.", "thank, jerry! i have some problem importing or restoring some.bson and.json files and appreciate if you could take a look stackoverflow.com/q/51394444/156458.", "have correct path but getting error: code_removed tried mongod, mongodb as well.", "this approach does not work when i use skip and limit with it:item.find().sort('date',-1).skip(start).limit(limit).run(\u200c\u200bcb); it should sort the rows and then skip the first n rows. but it skips the first n rows and then sorts the remained.", "i did, it's got its own paragraph in fact, and has since i wrote it......i also mention it in my profile, so not sure what else i can do to make it clear", "you can also try code_removed", "@thilo: correct, that is basically the bson representation of a javascript date object. it's a 64-bit integer that stores the milliseconds since the unix epoch and supports (most?) of the methods from the javascript specification.", "when i do an explain on this query it shows the index is only used for the 'deleted:false' portion of the query. the 'deleted:{$exists:false}' does not seem to use the index.", "the aforementioned answer is not a recommended way to run multiple instances (especially when the servers might be running at the same time) as it will lead to usage of the same config parameters like for example logpath and pidfilepath which in most cases is not what you want. please, consider creating dedicated mongod configuration files like mongod-qa.conf and mongod-stage.conf. in these files you may want to provide dbpath, logpath folders, bind_ip, port and pidfilepath specific to each mongod instance and that will not affect each other. after these steps you are good to trigger two instances as follows code_removed you can find more details on mongodb docs page", "code_removed was removed in favor of code_removed", "good to know, thanks", "\"robomongo\" is easy to use and cross platform, using on centos 6.2 but no option for data import/export which can be found in \"umongo\" but not easy to use as robomongo.", "the lock file was in /var/lib/mongodb/mongod.lock", "i actually like the read document and save approach. but i used couch before mongo so that approach seems more natural since there is no query api for couch, just a rest api for whole documents", "@johnnyhk, yup, i used it eventually, thanks!", "for string to int conversion. code_removed for string to double conversion. code_removed for float: code_removed", "this is kind of a dangerous answer without putting the condition the op specified in the remove...", "i have updated my question to respond to your detailed points. i will work on an example to send you off-list. thanks!", "\"make sure to run command prompt as administrator\" - it did the job! running with normal permission does not write any warning, but service is just not created. permissions, permissions, permissions!", "i have seen this kind of thing before. there was a piece of code that could answer certain 'questions' that came from another 'black box' piece of code. in the case it could not answer them, it would forward them to another piece of 'black box' code that was really slow. so sometimes previously unseen new 'questions' would show up, and they would show up in a batch, like 100 of them in a row. the programmer was happy with how the program was working, but he wanted some way of maybe improving the software in the future, if possible new questions were discovered. so, the solution was to log unknown questions, but as it turned out, there were 1000's of different ones. the logs got too big, and there was no benefit of speeding these up, since they had no obvious answers. but every once in a while, a batch of questions would show up that could be answered. since the logs were getting too big, and the logging was getting in the way of logging the real important things he got to this solution: only log a random 5%, this will clean up the logs, whilst in the long run still showing what questions/answers could be added. so, if an unknown event occurred, in a random amount of these cases, it would be logged. i think this is similar to what you are seeing here. i did not like this way of working, so i removed this piece of code, and just logged these messages to a different file, so they were all present, but not clobbering the general logfile.", "can this be done if i simply want to update a field on a document with a certain code_removed using another field this document contains. it is this latter field that i am having trouble extracting.", "one kind of join a query in mongodb, is ask at one collection for id that match, put ids in a list (idlist), and do find using on other (or same) collection with $in: idlist code_removed", "limitations of $lookup: 1)$lookup only supports equality for the match and the equality has to be between a single key from each collection. 2)the right-collection for $lookup cannot be sharded", "if you want to get all new things in the past 5 minutes you would have to do some calculations, but its not hard... first create an index on the property you want to match on (include sort direction -1 for descending and 1 for ascending) code_removed then query for documents created in the last 5 minutes (60 seconds * 5 minutes)....because javascript's code_removed returns milliseconds you need to mulitply by 1000 before you use it as input to the code_removed constructor. code_removed explanation for code_removed is as follows: first we calculate \"5 minutes ago\": code_removed gives us current time in milliseconds we want to subtract 5 minutes (in ms) from that: code_removed -- i just multiply by code_removed seconds so its easy to change. i can just change code_removed to code_removed if i want 2 hours (120 minutes). code_removed gives us code_removed (5 minutes ago in ms) now we need to feed that into a code_removed constructor to get the iso string format required by mongodb timestamps. code_removed (mongodb.find() query) since we can't have variables we do it all in one shot: code_removed ...then convert to iso string: code_removed code_removed gives us code_removed of course this is a little easier with variables if you're using the node-mongodb-native driver, but this works in the mongo shell which is what i usually use to check things.", "need to make sure the symlink is correct and mongodb user can indeed operate in the /data/db directory (create if does not exists)", "this is still true as of mongodb 3.4 april, 30th, 2017.", "i think he means directly from the prompt doesn't he? in that case you either have to generate a.js file with those commands and invoke it from the prompt using \"mongo dropdb.js\" or something or do as you say and remove the files manually.", "just to re-iterate for other readers - this query will not use the index. so pls don't use in production.", "thanks for the precisions. note that, as i stated, it is the mongodb site itself that emitted restrictions on relational queries. unless i misunderstood something else...", "you can use the command below for running mongodb as a windows service code_removed if you use mongodb with default parameters, you can use these values: youripadress: 127.0.0.1 or localhost yourportnumber: 27017 (default port) or dont put --port servicedisplayname: only if you run more than one service (since mongodb 1.8) there's more information on this command here", "$out takes the documents returned by the aggregation pipeline and writes them to a specified collection. the $out operation creates a new collection in the current database if one does not already exist. the collection is not visible until the aggregation completes. if the aggregation fails, mongodb does not create the collection. syntax: code_removed example a collection books contains the following documents: code_removed the following aggregation operation pivots the data in the books collection to have titles grouped by authors and then writes the results to the authors collection. code_removed after the operation, the authors collection contains the following documents: code_removed in the asked question, use following query and you will get new collection named 'col_20120105' in your database code_removed", "as of today (2010-11-18) dwight (speaking at the mongodc event in washington, dc) recommended the replicate / --repair / switch over approach if you want to compact without taking your database offline.", "code_removed", "is searching by regex expensive?", "agreed. that was more just a fun suggestion for toying around with the shell. plus, it would not bring over the indexes. if i was doing this, i would do the mongodump/mongorestore every time.", "compact all collections in current database code_removed", "try: code_removed where code_removed is your deprecated field and code_removed is the collection it was removed from. the general update command is of the form code_removed. the code_removed and code_removed trailing arguments disable upsert mode and enable multi update so that the query updates all of the documents in the collection (not just the first match). update for mongodb 2.2+ you can now provide a json object instead of positional arguments for upsert and multi. code_removed", "if i understand your question, you need to sort in ascending order. assuming you have some id or date field called \"x\" you would do... .sort() code_removed the 1 will sort ascending (oldest to newest) and -1 will sort descending (newest to oldest.) if you use the auto created _id field it has a date embedded in it... so you can use that to order by... code_removed that will return back all your documents sorted from oldest to newest. natural order you can also use a natural order mentioned above... code_removed again, using 1 or -1 depending on the order you want. use.limit() lastly, it's good practice to add a limit when doing this sort of wide open query so you could do either... code_removed or code_removed", "@haim, plase be specific to answer, which part of the web page resolves my question?", "run \"cmd.exe\" as administrator and then run \"sc.exe\" to add a new windows service. for example: code_removed", "(note: this is answer to the updated question) you can just do this on the cli: code_removed and it's always going to output pretty results.", "if you want to return the altered document you need to set the option code_removed api reference you can use code_removed taken by the official mongoose api you can use the following parameters code_removed another implementation thats is not expressed in the official api page and is what i prefer to use is the code_removed base implementation that allow you to have code_removed where you can deal with all your various error there. code_removed", "you are right, but i don't think it's a big deal as the time complexity of this would be code_removed which can be considered as code_removed.", "it's hard to say what the optimal bulk insert is -- this partly depends on the size of the objects you're inserting and other immeasurable factors. you could try a few ranges and see what gives you the best performance. as an alternative, some people like using mongoimport, which is pretty fast, but your import data needs to be json or csv. there's obviously mongodrestore, if the data is in bson format. mongo can easily handle billions of documents and can have billions of documents in the one collection but remember that the maximum document size is 16mb. there are many folk with billions of documents in mongodb and there's lots of discussions about it on the mongodb google user group. here's a document on using a large number of collections that you may like to read, if you change your mind and want to have multiple collections instead. the more collections you have, the more indexes you will have also, which probably isn't what you want. here's a presentation from craigslist on inserting billions of documents into mongodb and the guy's blogpost. it does look like sharding would be a good solution for you but typically sharding is used for scaling across multiple servers and a lot of folk do it because they want to scale their writes or they are unable to keep their working set (data and indexes) in ram. it is perfectly reasonable to start off with a single server and then move to a shard or replica-set as your data grows or you need extra redundancy and resilience. however, there are other users use multiple mongods to get around locking limits of a single mongod with lots of writes. it's obvious but still worth saying but a multi-mongod setup is more complex to manage than a single server. if your io or cpu isn't maxed out here, your working set is smaller than ram and your data is easy to keep balanced (pretty randomly distributed), you should see improvement (with sharding on a single server). as a fyi, there is potential for memory and io contention. with 2.2 having improved concurrency with db locking, i suspect that there will be much less of a reason for such a deployment. you need to plan your move to sharding properly, i.e. think carefully about choosing your shard key. if you go this way then it's best to pre-split and turn off the balancer. it will be counter-productive to be moving data around to keep things balanced which means you will need to decide up front how to split it. additionally, it is sometimes important to design your documents with the idea that some field will be useful for sharding on, or as a primary key. here's some good links - choosing a shard key blog post on shard keys overview presentation on sharding presentation on sharding best practices", "i don't get it.. it just returns all items in the colection:s", "from my experience with both, mongo is great for simple, straight-forward usage. the main mongo disadvantage we've suffered is the poor performance on unanticipated queries (you cannot created mongo indexes for all the possible filter/sort combinations, you simple can't). and here where lucene/solr prevails big time, especially with the filterquery caching, performance is outstanding.", "pretty cool, first time i see a function used with mongo!! the downside of course, i suppose, is that it won't use the indexes", "thanks, worked perfectly for my purposes. @mstearn, your comments on both efficiency and race conditions are valid, but for collections where neither matters (one-time server-side batch extract in a collection where records aren't deleted), this is vastly superior to the hacky (imo) solution in the mongo cookbook.", "i think this link will help you stackoverflow.com/questions/9647561/\u2026 by changing the db path of mongo", "oh so i guess.pretty() is equal to: code_removed", "i tried the following and its working fine. code_removed // callback function in case of nodejs", "take note the type of caveat mentioned. this does not work efficiently with small amount of documents. given two items with random key of 3 and 63. the document #63 will be chosen more frequently where code_removed is first. alternative solution stackoverflow.com/a/9499484/79201 would work better in this case.", "example: code_removed", "this is actually one of the best ways to do it because it correctly invokes middleware defined on the schema - see mongoosejs.com/docs/middleware.html. you should only use the other methods if you're not using middleware in your application, and then with caution.", "yup. after further digging i found that there's been an rfe filed to allow for convenience functions to do exactly this. i definitely don't like the looks of that code_removed for my ~10m documents, but that's apparently the state of affairs.", "i don't believe this works in 2.4.6. my records still exist.", "natural order should not be relied upon; if you are using a replica set (and you should be), different nodes might well have the same documents stored in a different order on disk.", "full command: code_removed", "there's a typo in my mongodb database name and i'm looking to rename the database. i can copy and delete like so... code_removed is there a command to rename a database?", "mongoose will add 's' to collection name by default. if you want to avoid that just pass third argument as name of collection code_removed", "code_removed won't do it. it still prints out only 20 documents. code_removed will both print out very expanded view of each document instead of the 1-line version for code_removed:", "it worked for me w/out using code_removed", "i get an error message when i try that code_removed?", "a good explanation is contained in \"starbucks does not use two phase commit\". it's not about nosql databases, but it does illustrate the point that sometimes you can afford to lose a transaction or have your database in an inconsistent state temporarily. i wouldn't consider it to be something that needs to be \"fixed\". the fix is to use an acid-compliant relational database. you choose a nosql alternative when its behavior meets your application requirements.", "but how would you get page two from that query without skip? if you're viewing 10 results per page, and there are a 100 results, how do you then define the offset or skip value? you're not answering the question of pagination, so you can't be 'disappointed', although it is a valid caution. although the same issue is in mysql offset,limit. it is has to traverse the tree to the offset before returning results. i'd take this with a grain of salt, if your result sets are less than 1mil and there's no preservable performance hit, use skip().", "this question is highly constructive. thanks for asking.", "from the docs for v3.2.10 and above: \"rewrites and defragments all data and indexes in a collection. on wiredtiger databases, this command will release unneeded disk space to the operating system.\"", "one useful class of use cases is counters and similar cases. for example, take a look at this code (one of the mongodb tests): find_and_modify4.js. thus, with code_removed you increment the counter and get its incremented value in one step. compare: if you (a) perform this operation in two steps and somebody else (b) does the same operation between your steps then a and b may get the same last counter value instead of two different (just one example of possible issues).", "+1 for the comment about print debugging, couldn't agree more. are you sharing your logging code on github or somewhere? i was considering doing that myself, but i haven't got much code to share yet. i forked github.com/rsdoiel/mongo-modules but haven't added anything yet.", "or, in mongoose, replace code_removed with: code_removed - where code_removed is your initialized/configured mongoose instance.", "useful answer, but the conclusion is hard to like.", "additionally this appears to be, as far as i can tell, the official 10gen java driver for mongodb so in addition to having an opinion on the java driver, i think it gives me an opinion on the code of mongodb", "simply do code_removed", "this is a very old bug in mongodb", "and for a fully worked out example with dask, just have a look here stackoverflow.com/questions/37979167/\u2026", "previous answers explained it well, i am adding my answer to help in case you are dealing with a remote password protected database code_removed", "mongodb-json-files"]